{"version":3,"sources":["webpack://tauri/webpack/universalModuleDefinition","webpack://tauri/./src/helpers/app-paths.ts","webpack://tauri/./src/helpers/logger.ts","webpack://tauri/./src/helpers/non-webpack-require.ts","webpack://tauri/./src/helpers/tauri-config.ts","webpack://tauri/./src/types/config.validator.ts","webpack://tauri/external \"ajv\"","webpack://tauri/external \"ajv/lib/refs/json-schema-draft-06.json\"","webpack://tauri/external \"chalk\"","webpack://tauri/external \"fs\"","webpack://tauri/external \"fs-extra\"","webpack://tauri/external \"ms\"","webpack://tauri/external \"path\"","webpack://tauri/external \"util\"","webpack://tauri/external \"webpack-merge\"","webpack://tauri/webpack/bootstrap","webpack://tauri/webpack/startup"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;ACVa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,eAAe,GAAG,gBAAgB,GAAG,cAAc;AACnD,WAAW,mBAAO,CAAC,cAAI;AACvB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,+BAA+B,mBAAO,CAAC,yCAAU;AACjD,8BAA8B,mBAAO,CAAC,oBAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,gBAAgB;AAChB;AACA,yBAAyB,iCAAiC,EAAE;AAC5D,2BAA2B,mCAAmC;AAC9D;AACA,eAAe;;;;;;;;;;;ACpCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,8BAA8B,mBAAO,CAAC,oBAAO;AAC7C,2BAA2B,mBAAO,CAAC,cAAI;AACvC;AACA,eAAe;AACf,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACxBY;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA,eAAe;AACf;AACA,WAAW,OAAuB;AAClC,CAAC;;;;;;;;;;;ACNY;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,iBAAiB,mBAAO,CAAC,0BAAU;AACnC,sBAAsB,mBAAO,CAAC,oCAAe;AAC7C,+BAA+B,mBAAO,CAAC,kDAAmB;AAC1D,4BAA4B,mBAAO,CAAC,+CAAa;AACjD,4CAA4C,mBAAO,CAAC,4EAAgC;AACpF,8BAA8B,mBAAO,CAAC,oBAAO;AAC7C,yBAAyB,mBAAO,CAAC,kEAA2B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oIAAoI,2BAA2B,EAAE;AACjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,8CAA8C;AAC3D;AACA,+CAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,oBAAoB,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;AC/HF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,qBAAqB,GAAG,yBAAyB,GAAG,WAAW;AAC/D;AACA;AACA,aAAa,mBAAO,CAAC,kBAAM;AAC3B,4BAA4B,mBAAO,CAAC,gBAAK;AACzC,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,0BAA0B,mBAAO,CAAC,sFAAwC;AAC1E,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,qBAAqB;AACrB,sNAAsN,MAAM;AAC5N;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,qBAAqB;AACrB,sLAAsL,MAAM;AAC5L;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,wCAAwC;AACxC;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iCAAiC;AACjC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iCAAiC;AACjC;AACA;AACA,iCAAiC;AACjC;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iGAAiG,2BAA2B,EAAE,IAAI,yBAAyB;AAC3J;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;ACzff,iC;;;;;;;;;;ACAA,oE;;;;;;;;;;ACAA,mC;;;;;;;;;;ACAA,gC;;;;;;;;;;ACAA,sC;;;;;;;;;;ACAA,gC;;;;;;;;;;ACAA,kC;;;;;;;;;;ACAA,kC;;;;;;;;;;ACAA,2C;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;UCrBA;UACA;UACA;UACA","file":"helpers/tauri-config.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tauri\"] = factory();\n\telse\n\t\troot[\"tauri\"] = factory();\n})(global, function() {\nreturn ","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolve = exports.tauriDir = exports.appDir = void 0;\nvar fs_1 = require(\"fs\");\nvar path_1 = require(\"path\");\nvar logger_1 = __importDefault(require(\"./logger\"));\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar warn = logger_1.default('tauri', chalk_1.default.red);\nfunction resolvePath(basePath, dir) {\n    return dir && path_1.isAbsolute(dir) ? dir : path_1.resolve(basePath, dir);\n}\nvar getAppDir = function () {\n    var dir = process.cwd();\n    var count = 0;\n    // only go up three folders max\n    while (dir.length > 0 && !dir.endsWith(path_1.sep) && count <= 2) {\n        if (fs_1.existsSync(path_1.join(dir, 'src-tauri', 'tauri.conf.json'))) {\n            return dir;\n        }\n        count++;\n        dir = path_1.normalize(path_1.join(dir, '..'));\n    }\n    warn(\"Couldn't find recognize the current folder as a part of a Tauri project\");\n    process.exit(1);\n};\nvar appDir = getAppDir();\nexports.appDir = appDir;\nvar tauriDir = path_1.resolve(appDir, 'src-tauri');\nexports.tauriDir = tauriDir;\nvar resolveDir = {\n    app: function (dir) { return resolvePath(appDir, dir); },\n    tauri: function (dir) { return resolvePath(tauriDir, dir); }\n};\nexports.resolve = resolveDir;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar ms_1 = __importDefault(require(\"ms\"));\nvar prevTime;\nexports.default = (function (banner, color) {\n    if (color === void 0) { color = chalk_1.default.green; }\n    return function (msg) {\n        var curr = +new Date();\n        var diff = curr - (prevTime || curr);\n        prevTime = curr;\n        if (msg) {\n            console.log(\n            // TODO: proper typings for color and banner\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call\n            \" \" + color(String(banner)) + \" \" + msg + \" \" + chalk_1.default.green(\"+\" + ms_1.default(diff)));\n        }\n        else {\n            console.log();\n        }\n    };\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// this function has been moved to a module so we can mock it\nexports.default = (function (path) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return __non_webpack_require__(path);\n});\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fs_extra_1 = require(\"fs-extra\");\nvar webpack_merge_1 = require(\"webpack-merge\");\nvar logger_1 = __importDefault(require(\"../helpers/logger\"));\nvar appPaths = __importStar(require(\"./app-paths\"));\nvar non_webpack_require_1 = __importDefault(require(\"../helpers/non-webpack-require\"));\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar config_validator_1 = require(\"../types/config.validator\");\nvar error = logger_1.default('ERROR:', chalk_1.default.red);\nvar getTauriConfig = function (cfg) {\n    var _a, _b, _c;\n    var pkgPath = appPaths.resolve.app('package.json');\n    var tauriConfPath = appPaths.resolve.tauri('tauri.conf.json');\n    if (!fs_extra_1.existsSync(tauriConfPath)) {\n        error(\"Could not find a tauri config (tauri.conf.json) in your app's directory.\");\n        process.exit(1);\n    }\n    var tauriConf = JSON.parse(fs_extra_1.readFileSync(tauriConfPath).toString());\n    var pkg = fs_extra_1.existsSync(pkgPath)\n        ? non_webpack_require_1.default(pkgPath)\n        : null;\n    var config = webpack_merge_1.merge({\n        build: {},\n        ctx: {},\n        tauri: {\n            embeddedServer: {\n                active: true\n            },\n            bundle: {\n                active: true,\n                icon: [],\n                resources: [],\n                externalBin: [],\n                deb: {\n                    depends: []\n                },\n                osx: {\n                    frameworks: []\n                }\n            },\n            allowlist: {\n                all: false\n            },\n            window: {\n                title: (_a = pkg === null || pkg === void 0 ? void 0 : pkg.productName) !== null && _a !== void 0 ? _a : 'Tauri App'\n            },\n            security: {\n                csp: \"default-src blob: data: filesystem: ws: http: https: 'unsafe-eval' 'unsafe-inline'\"\n            },\n            inliner: {\n                active: true\n            }\n        }\n    }, tauriConf, cfg);\n    if (!config_validator_1.isTauriConfig(config)) {\n        var messages = config_validator_1.ajv\n            .errorsText((_b = config_validator_1.isTauriConfig.errors) === null || _b === void 0 ? void 0 : _b.filter(function (e) { return e.keyword !== 'if'; }).map(function (e) {\n            e.dataPath = e.dataPath.replace(/\\./g, ' > ');\n            if (e.keyword === 'additionalProperties' &&\n                typeof e.message === 'string' &&\n                'additionalProperty' in e.params) {\n                e.message = \"has unknown property \" + e.params.additionalProperty;\n            }\n            return e;\n        }), { dataVar: 'tauri.conf.json', separator: '\\n' })\n            .split('\\n');\n        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\n            var message = messages_1[_i];\n            error(message);\n        }\n        process.exit(1);\n    }\n    var runningDevServer = (_c = config.build.devPath) === null || _c === void 0 ? void 0 : _c.startsWith('http');\n    if (!runningDevServer) {\n        config.build.devPath = appPaths.resolve.tauri(config.build.devPath);\n        process.env.TAURI_DIST_DIR = config.build.devPath;\n    }\n    if (config.build.distDir) {\n        config.build.distDir = appPaths.resolve.tauri(config.build.distDir);\n        process.env.TAURI_DIST_DIR = config.build.distDir;\n    }\n    // OSX bundle config\n    if (config.tauri.bundle.osx) {\n        var license = config.tauri.bundle.osx.license;\n        if (typeof license === 'string') {\n            config.tauri.bundle.osx.license = appPaths.resolve.tauri(license);\n        }\n        else if (license !== null) {\n            var licensePath = appPaths.resolve.app('LICENSE');\n            if (fs_extra_1.existsSync(licensePath)) {\n                config.tauri.bundle.osx.license = licensePath;\n            }\n        }\n    }\n    // bundle targets\n    if (Array.isArray(config.tauri.bundle.targets)) {\n        if (process.platform !== 'win32') {\n            config.tauri.bundle.targets = config.tauri.bundle.targets.filter(function (t) { return t !== 'msi'; });\n        }\n    }\n    process.env.TAURI_DIR = appPaths.tauriDir;\n    process.env.TAURI_CONFIG = JSON.stringify(config);\n    return config;\n};\nexports.default = getTauriConfig;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTauriConfig = exports.TauriConfigSchema = exports.ajv = void 0;\n/* tslint:disable */\n// generated by typescript-json-validator\nvar util_1 = require(\"util\");\nvar ajv_1 = __importDefault(require(\"ajv\"));\nexports.ajv = new ajv_1.default({\n    allErrors: true,\n    coerceTypes: false,\n    format: 'fast',\n    nullable: true,\n    unicode: true,\n    uniqueItems: true,\n    useDefaults: true\n});\nexports.ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));\nexports.TauriConfigSchema = {\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    additionalProperties: false,\n    defaultProperties: [],\n    definitions: {\n        CliArg: {\n            additionalProperties: false,\n            defaultProperties: [],\n            description: 'A CLI argument definition',\n            properties: {\n                conflictsWith: {\n                    description: \"sets a conflicting argument by name\\ni.e. when using this argument, the following argument can't be present and vice versa\",\n                    type: 'string'\n                },\n                conflictsWithAll: {\n                    description: 'the same as conflictsWith but allows specifying multiple two-way conflicts per argument',\n                    type: 'string'\n                },\n                description: {\n                    description: 'the argument description which will be shown on the help information\\ntypically, this is a short (one line) description of the arg',\n                    type: 'string'\n                },\n                index: {\n                    description: 'The positional argument index, starting at 1.\\n\\nThe index refers to position according to other positional argument.\\nIt does not define position in the argument list as a whole. When utilized with multiple=true,\\nonly the last positional argument may be defined as multiple (i.e. the one with the highest index).',\n                    type: 'number'\n                },\n                longDescription: {\n                    description: 'the argument long description which will be shown on the help information\\ntypically this a more detailed (multi-line) message that describes the argument',\n                    type: 'string'\n                },\n                maxValues: {\n                    description: \"specifies the maximum number of values are for this argument.\\nfor example, if you had a -f <file> argument where you wanted up to 3 'files' you would set .max_values(3), and this argument would be satisfied if the user provided, 1, 2, or 3 values.\",\n                    type: 'number'\n                },\n                minValues: {\n                    description: \"specifies the minimum number of values for this argument.\\nfor example, if you had a -f <file> argument where you wanted at least 2 'files' you would set `minValues: 2`, and this argument would be satisfied if the user provided, 2 or more values.\",\n                    type: 'number'\n                },\n                multiple: {\n                    description: 'specifies that the argument may appear more than once.\\nfor flags, this results in the number of occurrences of the flag being recorded. For example -ddd or -d -d -d would count as three occurrences.\\nfor options there is a distinct difference in multiple occurrences vs multiple values. For example, --opt val1 val2 is one occurrence, but two values. Whereas --opt val1 --opt val2 is two occurrences.',\n                    type: 'boolean'\n                },\n                multipleOccurrences: {\n                    description: 'specifies that the argument may appear more than once.',\n                    type: 'boolean'\n                },\n                name: {\n                    description: 'the unique argument name',\n                    type: 'string'\n                },\n                possibleValues: {\n                    description: 'specifies a list of possible values for this argument. At runtime, the CLI verifies that only one of the specified values was used, or fails with an error message.',\n                    items: {\n                        type: 'string'\n                    },\n                    type: 'array'\n                },\n                requireEquals: {\n                    description: 'requires that options use the --option=val syntax\\ni.e. an equals between the option and associated value',\n                    type: 'boolean'\n                },\n                required: {\n                    description: 'sets whether or not the argument is required by default\\nrequired by default means it is required, when no other conflicting rules have been evaluated\\nconflicting rules take precedence over being required.',\n                    type: 'boolean'\n                },\n                requiredIf: {\n                    additionalItems: {\n                        anyOf: [\n                            {\n                                type: 'string'\n                            },\n                            {\n                                type: 'string'\n                            }\n                        ]\n                    },\n                    description: \"allows specifying that an argument is required conditionally with the signature [arg: string, value: string]\\nthe requirement will only become valid if the `arg`'s value equals `${value}`.\",\n                    items: [\n                        {\n                            type: 'string'\n                        },\n                        {\n                            type: 'string'\n                        }\n                    ],\n                    minItems: 2,\n                    type: 'array'\n                },\n                requiredUnless: {\n                    description: \"sets an arg that override this arg's required setting\\ni.e. this arg will be required unless this other argument is present\",\n                    type: 'string'\n                },\n                requiredUnlessAll: {\n                    description: \"sets args that override this arg's required setting\\ni.e. this arg will be required unless all these other arguments are present\",\n                    items: {\n                        type: 'string'\n                    },\n                    type: 'array'\n                },\n                requiredUnlessOne: {\n                    description: \"sets args that override this arg's required setting\\ni.e. this arg will be required unless at least one of these other arguments are present\",\n                    items: {\n                        type: 'string'\n                    },\n                    type: 'array'\n                },\n                requires: {\n                    description: 'sets an argument by name that is required when this one is present\\ni.e. when using this argument, the following argument must be present',\n                    type: 'string'\n                },\n                requiresAll: {\n                    description: 'sets multiple arguments by names that are required when this one is present\\ni.e. when using this argument, the following arguments must be present',\n                    items: {\n                        type: 'string'\n                    },\n                    type: 'array'\n                },\n                requiresIf: {\n                    additionalItems: {\n                        anyOf: [\n                            {\n                                type: 'string'\n                            },\n                            {\n                                type: 'string'\n                            }\n                        ]\n                    },\n                    description: \"allows a conditional requirement with the signature [arg: string, value: string]\\nthe requirement will only become valid if `arg`'s value equals `${value}`\",\n                    items: [\n                        {\n                            type: 'string'\n                        },\n                        {\n                            type: 'string'\n                        }\n                    ],\n                    minItems: 2,\n                    type: 'array'\n                },\n                short: {\n                    description: 'the short version of the argument, without the preceding -\\nNOTE: Any leading - characters will be stripped, and only the first non - character will be used as the short version',\n                    type: 'string'\n                },\n                takesValue: {\n                    description: 'specifies that the argument takes a value at run time.\\nNOTE: values for arguments may be specified in any of the following methods\\n- Using a space such as -o value or --option value\\n- Using an equals and no space such as -o=value or --option=value\\n- Use a short and no space such as -ovalue',\n                    type: 'boolean'\n                }\n            },\n            required: ['name'],\n            type: 'object'\n        },\n        CliConfig: {\n            additionalProperties: false,\n            defaultProperties: [],\n            description: 'describes a CLI configuration',\n            properties: {\n                afterHelp: {\n                    description: 'adds additional help information to be displayed in addition to auto-generated help\\nthis information is displayed after the auto-generated help information\\nthis is often used to describe how to use the arguments, or caveats to be noted.',\n                    type: 'string'\n                },\n                args: {\n                    description: 'list of args for the command',\n                    items: {\n                        $ref: '#/definitions/CliArg'\n                    },\n                    type: 'array'\n                },\n                beforeHelp: {\n                    description: 'adds additional help information to be displayed in addition to auto-generated help\\nthis information is displayed before the auto-generated help information.\\nthis is often used for header information',\n                    type: 'string'\n                },\n                description: {\n                    description: 'command description which will be shown on the help information',\n                    type: 'string'\n                },\n                longDescription: {\n                    description: 'command long description which will be shown on the help information',\n                    type: 'string'\n                },\n                subcommands: {\n                    additionalProperties: {\n                        $ref: '#/definitions/CliConfig'\n                    },\n                    defaultProperties: [],\n                    description: 'list of subcommands of this command\\n\\nsubcommands are effectively sub-apps, because they can contain their own arguments, subcommands, usage, etc.\\nthey also function just like the app command, in that they get their own auto generated help and usage',\n                    type: 'object'\n                }\n            },\n            type: 'object'\n        },\n        TauriBuildConfig: {\n            additionalProperties: false,\n            defaultProperties: [],\n            properties: {\n                beforeBuildCommand: {\n                    description: 'a shell command to run before `tauri build` kicks in',\n                    type: 'string'\n                },\n                beforeDevCommand: {\n                    description: 'a shell command to run before `tauri dev` kicks in',\n                    type: 'string'\n                },\n                devPath: {\n                    description: \"the app's dev server URL, or the path to the directory containing an index.html to open\",\n                    type: 'string'\n                },\n                distDir: {\n                    description: \"the path to the app's dist dir\\nthis path must contain your index.html file\",\n                    type: 'string'\n                },\n                withGlobalTauri: {\n                    type: 'boolean'\n                }\n            },\n            required: ['devPath', 'distDir'],\n            type: 'object'\n        }\n    },\n    description: 'Tauri configuration',\n    properties: {\n        build: {\n            $ref: '#/definitions/TauriBuildConfig',\n            description: 'build/dev configuration'\n        },\n        ctx: {\n            additionalProperties: false,\n            defaultProperties: [],\n            description: 'the context of the current `tauri dev` or `tauri build`',\n            properties: {\n                debug: {\n                    description: 'whether the app should be built on debug mode or not',\n                    type: 'boolean'\n                },\n                dev: {\n                    description: \"whether we're running on the dev environment or not\",\n                    type: 'boolean'\n                },\n                exitOnPanic: {\n                    description: 'defines we should exit the `tauri dev` process if a Rust code error is found',\n                    type: 'boolean'\n                },\n                prod: {\n                    description: \"whether we're building for production or not\",\n                    type: 'boolean'\n                },\n                target: {\n                    description: 'the target of the compilation (see `rustup target list`)',\n                    type: 'string'\n                }\n            },\n            type: 'object'\n        },\n        plugins: {\n            additionalProperties: {\n                additionalProperties: {},\n                defaultProperties: [],\n                type: 'object'\n            },\n            defaultProperties: [],\n            type: 'object'\n        },\n        tauri: {\n            additionalProperties: false,\n            defaultProperties: [],\n            description: 'tauri root configuration object',\n            properties: {\n                allowlist: {\n                    additionalProperties: {\n                        type: 'boolean'\n                    },\n                    defaultProperties: [],\n                    properties: {\n                        all: {\n                            type: 'boolean'\n                        }\n                    },\n                    required: ['all'],\n                    type: 'object'\n                },\n                bundle: {\n                    additionalProperties: false,\n                    defaultProperties: [],\n                    description: 'tauri bundler configuration',\n                    properties: {\n                        active: {\n                            description: 'whether we should build your app with tauri-bundler or plain `cargo build`',\n                            type: 'boolean'\n                        },\n                        category: {\n                            type: 'string'\n                        },\n                        copyright: {\n                            type: 'string'\n                        },\n                        deb: {\n                            additionalProperties: false,\n                            defaultProperties: [],\n                            properties: {\n                                depends: {\n                                    items: {\n                                        type: 'string'\n                                    },\n                                    type: 'array'\n                                },\n                                useBootstrapper: {\n                                    type: 'boolean'\n                                }\n                            },\n                            type: 'object'\n                        },\n                        exceptionDomain: {\n                            type: 'string'\n                        },\n                        externalBin: {\n                            items: {\n                                type: 'string'\n                            },\n                            type: 'array'\n                        },\n                        icon: {\n                            description: \"the app's icons\",\n                            items: {\n                                type: 'string'\n                            },\n                            type: 'array'\n                        },\n                        identifier: {\n                            description: \"the app's identifier\",\n                            type: 'string'\n                        },\n                        longDescription: {\n                            type: 'string'\n                        },\n                        osx: {\n                            additionalProperties: false,\n                            defaultProperties: [],\n                            properties: {\n                                frameworks: {\n                                    items: {\n                                        type: 'string'\n                                    },\n                                    type: 'array'\n                                },\n                                license: {\n                                    type: 'string'\n                                },\n                                minimumSystemVersion: {\n                                    type: 'string'\n                                },\n                                useBootstrapper: {\n                                    type: 'boolean'\n                                }\n                            },\n                            type: 'object'\n                        },\n                        resources: {\n                            description: 'app resources to bundle\\neach resource is a path to a file or directory\\nglob patterns are supported',\n                            items: {\n                                type: 'string'\n                            },\n                            type: 'array'\n                        },\n                        shortDescription: {\n                            type: 'string'\n                        },\n                        targets: {\n                            anyOf: [\n                                {\n                                    items: {\n                                        type: 'string'\n                                    },\n                                    type: 'array'\n                                },\n                                {\n                                    type: 'string'\n                                }\n                            ],\n                            description: 'the bundle targets, currently supports [\"deb\", \"osx\", \"msi\", \"appimage\", \"dmg\"] or \"all\"'\n                        }\n                    },\n                    required: ['icon', 'identifier'],\n                    type: 'object'\n                },\n                cli: {\n                    $ref: '#/definitions/CliConfig',\n                    description: \"app's CLI definition\"\n                },\n                embeddedServer: {\n                    additionalProperties: false,\n                    defaultProperties: [],\n                    description: 'the embedded server configuration',\n                    properties: {\n                        active: {\n                            description: 'whether we should use the embedded-server or the no-server mode',\n                            type: 'boolean'\n                        },\n                        port: {\n                            anyOf: [\n                                {\n                                    enum: ['random'],\n                                    type: 'string'\n                                },\n                                {\n                                    type: 'number'\n                                }\n                            ],\n                            description: \"the embedded server port number or the 'random' string to generate one at runtime\"\n                        }\n                    },\n                    type: 'object'\n                },\n                inliner: {\n                    additionalProperties: false,\n                    defaultProperties: [],\n                    properties: {\n                        active: {\n                            type: 'boolean'\n                        }\n                    },\n                    type: 'object'\n                },\n                security: {\n                    additionalProperties: false,\n                    defaultProperties: [],\n                    properties: {\n                        csp: {\n                            type: 'string'\n                        }\n                    },\n                    type: 'object'\n                },\n                window: {\n                    additionalProperties: false,\n                    defaultProperties: [],\n                    properties: {\n                        fullscreen: {\n                            type: 'boolean'\n                        },\n                        height: {\n                            type: 'number'\n                        },\n                        resizable: {\n                            type: 'boolean'\n                        },\n                        title: {\n                            type: 'string'\n                        },\n                        width: {\n                            type: 'number'\n                        }\n                    },\n                    required: ['title'],\n                    type: 'object'\n                }\n            },\n            required: [\n                'allowlist',\n                'bundle',\n                'embeddedServer',\n                'inliner',\n                'security',\n                'window'\n            ],\n            type: 'object'\n        },\n        verbose: {\n            description: 'Whether or not to enable verbose logging',\n            type: 'boolean'\n        }\n    },\n    required: ['build', 'ctx', 'tauri'],\n    type: 'object'\n};\nexports.isTauriConfig = exports.ajv.compile(exports.TauriConfigSchema);\nfunction validate(value) {\n    if (exports.isTauriConfig(value)) {\n        return value;\n    }\n    else {\n        throw new Error(exports.ajv.errorsText(exports.isTauriConfig.errors.filter(function (e) { return e.keyword !== 'if'; }), { dataVar: 'TauriConfig' }) +\n            '\\n\\n' +\n            util_1.inspect(value));\n    }\n}\nexports.default = validate;\n","module.exports = require(\"ajv\");;","module.exports = require(\"ajv/lib/refs/json-schema-draft-06.json\");;","module.exports = require(\"chalk\");;","module.exports = require(\"fs\");;","module.exports = require(\"fs-extra\");;","module.exports = require(\"ms\");;","module.exports = require(\"path\");;","module.exports = require(\"util\");;","module.exports = require(\"webpack-merge\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/helpers/tauri-config.ts\");\n"],"sourceRoot":""}