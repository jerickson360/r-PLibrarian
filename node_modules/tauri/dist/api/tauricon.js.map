{"version":3,"sources":["webpack://tauri/webpack/universalModuleDefinition","webpack://tauri/./src/api/tauricon.ts","webpack://tauri/./src/helpers/app-paths.ts","webpack://tauri/./src/helpers/logger.ts","webpack://tauri/./src/helpers/tauricon.config.ts","webpack://tauri/external \"chalk\"","webpack://tauri/external \"fs\"","webpack://tauri/external \"fs-extra\"","webpack://tauri/external \"imagemin\"","webpack://tauri/external \"imagemin-optipng\"","webpack://tauri/external \"imagemin-pngquant\"","webpack://tauri/external \"imagemin-zopfli\"","webpack://tauri/external \"is-png\"","webpack://tauri/external \"ms\"","webpack://tauri/external \"path\"","webpack://tauri/external \"png2icons\"","webpack://tauri/external \"read-chunk\"","webpack://tauri/external \"sharp\"","webpack://tauri/webpack/bootstrap","webpack://tauri/webpack/startup"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;ACVa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,0BAAU;AACnC,iCAAiC,mBAAO,CAAC,0BAAU;AACnD,yCAAyC,mBAAO,CAAC,0CAAkB;AACnE,0CAA0C,mBAAO,CAAC,4CAAmB;AACrE,wCAAwC,mBAAO,CAAC,wCAAiB;AACjE,+BAA+B,mBAAO,CAAC,sBAAQ;AAC/C,6BAA6B,mBAAO,CAAC,kBAAM;AAC3C,6BAA6B,mBAAO,CAAC,4BAAW;AAChD,mCAAmC,mBAAO,CAAC,8BAAY;AACvD,8BAA8B,mBAAO,CAAC,oBAAO;AAC7C,kBAAkB,mBAAO,CAAC,wDAAsB;AAChD,+BAA+B,mBAAO,CAAC,kDAAmB;AAC1D,4BAA4B,mBAAO,CAAC,oEAA4B;AAChE,8BAA8B,mBAAO,CAAC,oBAAO;AAC7C,qBAAqB,mBAAO,CAAC,0CAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,EAAE;AACH;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,6BAA6B,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8BAA8B,EAAE,UAAU,EAAE,UAAU,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,EAAE;AACH;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,6BAA6B,kEAAkE;AAC/F,gCAAgC,gEAAgE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sCAAsC,cAAc,yCAAyC,EAAE;AAC/F;AACA;AACA;AACA;AACA,0CAA0C,cAAc,yCAAyC,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,uBAAuB,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,CAAC;AACD;AACA,IAAI,IAA8B;AAClC,QAAQ,KAA6B;AACrC;AACA;AACA,IAAI,gBAAgB;AACpB;;;;;;;;;;;ACpqBa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,eAAe,GAAG,gBAAgB,GAAG,cAAc;AACnD,WAAW,mBAAO,CAAC,cAAI;AACvB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,+BAA+B,mBAAO,CAAC,yCAAU;AACjD,8BAA8B,mBAAO,CAAC,oBAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,gBAAgB;AAChB;AACA,yBAAyB,iCAAiC,EAAE;AAC5D,2BAA2B,mCAAmC;AAC9D;AACA,eAAe;;;;;;;;;;;ACpCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,8BAA8B,mBAAO,CAAC,oBAAO;AAC7C,2BAA2B,mBAAO,CAAC,cAAI;AACvC;AACA,eAAe;AACf,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACxBY;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,eAAe;AACf,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC5EA,mC;;;;;;;;;;ACAA,gC;;;;;;;;;;ACAA,sC;;;;;;;;;;ACAA,sC;;;;;;;;;;ACAA,8C;;;;;;;;;;ACAA,+C;;;;;;;;;;ACAA,6C;;;;;;;;;;ACAA,oC;;;;;;;;;;ACAA,gC;;;;;;;;;;ACAA,kC;;;;;;;;;;ACAA,uC;;;;;;;;;;ACAA,wC;;;;;;;;;;ACAA,mC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;UCrBA;UACA;UACA;UACA","file":"api/tauricon.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tauri\"] = factory();\n\telse\n\t\troot[\"tauri\"] = factory();\n})(global, function() {\nreturn ","'use strict';\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call */\n/**\n * This is a module that takes an original image and resizes\n * it to common icon sizes and will put them in a folder.\n * It will retain transparency and can make special file\n * types. You can control the settings.\n *\n * @module tauricon\n * @exports tauricon\n * @author Daniel Thompson-Yvetot\n * @license MIT\n */\nvar fs_extra_1 = require(\"fs-extra\");\nvar imagemin_1 = __importDefault(require(\"imagemin\"));\nvar imagemin_optipng_1 = __importDefault(require(\"imagemin-optipng\"));\nvar imagemin_pngquant_1 = __importDefault(require(\"imagemin-pngquant\"));\nvar imagemin_zopfli_1 = __importDefault(require(\"imagemin-zopfli\"));\nvar is_png_1 = __importDefault(require(\"is-png\"));\nvar path_1 = __importDefault(require(\"path\"));\nvar png2icons = __importStar(require(\"png2icons\"));\nvar read_chunk_1 = __importDefault(require(\"read-chunk\"));\nvar sharp_1 = __importDefault(require(\"sharp\"));\nvar app_paths_1 = require(\"../helpers/app-paths\");\nvar logger_1 = __importDefault(require(\"../helpers/logger\"));\nvar settings = __importStar(require(\"../helpers/tauricon.config\"));\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar package_json_1 = require(\"../../package.json\");\nvar log = logger_1.default('app:spawn');\nvar warn = logger_1.default('app:spawn', chalk_1.default.red);\nvar image = false;\nvar spinnerInterval = false;\nvar exists = function (file) {\n    return __awaiter(this, void 0, void 0, function () {\n        var err_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, fs_extra_1.access(file)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, true];\n                case 2:\n                    err_1 = _a.sent();\n                    return [2 /*return*/, false];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n};\n/**\n * This is the first call that attempts to memoize the sharp(src).\n * If the source image cannot be found or if it is not a png, it\n * is a failsafe that will exit or throw.\n *\n * @param {string} src - a folder to target\n * @exits {error} if not a png, if not an image\n */\nvar checkSrc = function (src) { return __awaiter(void 0, void 0, void 0, function () {\n    var srcExists, buffer;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(image !== false)) return [3 /*break*/, 1];\n                return [2 /*return*/, image];\n            case 1: return [4 /*yield*/, exists(src)];\n            case 2:\n                srcExists = _a.sent();\n                if (!!srcExists) return [3 /*break*/, 3];\n                image = false;\n                if (spinnerInterval)\n                    clearInterval(spinnerInterval);\n                warn('[ERROR] Source image for tauricon not found');\n                process.exit(1);\n                return [3 /*break*/, 5];\n            case 3: return [4 /*yield*/, read_chunk_1.default(src, 0, 8)];\n            case 4:\n                buffer = _a.sent();\n                if (is_png_1.default(buffer)) {\n                    return [2 /*return*/, (image = sharp_1.default(src))];\n                }\n                else {\n                    image = false;\n                    if (spinnerInterval)\n                        clearInterval(spinnerInterval);\n                    warn('[ERROR] Source image for tauricon is not a png');\n                    process.exit(1);\n                }\n                _a.label = 5;\n            case 5: return [2 /*return*/];\n        }\n    });\n}); };\n/**\n * Sort the folders in the current job for unique folders.\n *\n * @param {object} options - a subset of the settings\n * @returns {array} folders\n */\n// TODO: proper type of options and folders\nvar uniqueFolders = function (options) {\n    var folders = [];\n    for (var type in options) {\n        var option = options[String(type)];\n        if (option.folder) {\n            folders.push(option.folder);\n        }\n    }\n    // TODO: is compare argument required?\n    // eslint-disable-next-line @typescript-eslint/require-array-sort-compare\n    folders = folders.sort().filter(function (x, i, a) { return !i || x !== a[i - 1]; });\n    return folders;\n};\n/**\n * Turn a hex color (like #212342) into r,g,b values\n *\n * @param {string} hex - hex colour\n * @returns {array} r,g,b\n */\nvar hexToRgb = function (hex) {\n    // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n        return r + r + g + g + b + b;\n    });\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result\n        ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        }\n        : undefined;\n};\n/**\n * validate image and directory\n */\nvar validate = function (src, target) { return __awaiter(void 0, void 0, void 0, function () {\n    var res;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(target !== undefined)) return [3 /*break*/, 2];\n                return [4 /*yield*/, fs_extra_1.ensureDir(target)];\n            case 1:\n                _a.sent();\n                _a.label = 2;\n            case 2: return [4 /*yield*/, checkSrc(src)];\n            case 3:\n                res = _a.sent();\n                return [2 /*return*/, res];\n        }\n    });\n}); };\n// TODO: should take end param?\n/**\n * Log progress in the command line\n *\n * @param {boolean} end\n */\nvar progress = function (msg) {\n    process.stdout.write(\"  \" + msg + \"                       \\r\");\n};\n/**\n * Create a spinner on the command line\n *\n * @example\n *\n *     const spinnerInterval = spinner()\n *     // later\n *     clearInterval(spinnerInterval)\n */\nvar spinner = function () {\n    return setInterval(function () {\n        process.stdout.write('/ \\r');\n        setTimeout(function () {\n            process.stdout.write('- \\r');\n            setTimeout(function () {\n                process.stdout.write('\\\\ \\r');\n                setTimeout(function () {\n                    process.stdout.write('| \\r');\n                }, 100);\n            }, 100);\n        }, 100);\n    }, 500);\n};\nvar tauricon = (exports.tauricon = {\n    validate: function (src, target) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, validate(src, target)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, typeof image === 'object'];\n                }\n            });\n        });\n    },\n    version: function () {\n        return package_json_1.version;\n    },\n    make: function (src, target, strategy, \n    // TODO: proper type for options\n    options) {\n        if (src === void 0) { src = path_1.default.resolve(app_paths_1.appDir, 'app-icon.png'); }\n        if (target === void 0) { target = path_1.default.resolve(app_paths_1.tauriDir, 'icons'); }\n        return __awaiter(this, void 0, void 0, function () {\n            var spinnerInterval;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        spinnerInterval = spinner();\n                        options = options || settings.options.tauri;\n                        return [4 /*yield*/, this.validate(src, target)];\n                    case 1:\n                        _a.sent();\n                        progress('Building Tauri icns and ico');\n                        return [4 /*yield*/, this.icns(src, target, options, strategy)];\n                    case 2:\n                        _a.sent();\n                        progress('Building Tauri png icons');\n                        return [4 /*yield*/, this.build(src, target, options)];\n                    case 3:\n                        _a.sent();\n                        if (!strategy) return [3 /*break*/, 5];\n                        progress(\"Minifying assets with \" + strategy);\n                        return [4 /*yield*/, this.minify(target, options, strategy, 'batch')];\n                    case 4:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        log('no minify strategy');\n                        _a.label = 6;\n                    case 6:\n                        progress('Tauricon Finished');\n                        clearInterval(spinnerInterval);\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    },\n    /**\n     * Creates a set of images according to the subset of options it knows about.\n     *\n     * @param {string} src - image location\n     * @param {string} target - where to drop the images\n     * @param {object} options - js object that defines path and sizes\n     */\n    build: function (src, target, \n    // TODO: proper type for options\n    options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var sharpSrc, buildify2, output, folders, n, folder, _a, _b, _i, optionKey, option, _c, _d, _e, sizeKey, size, dest, pvar;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0: return [4 /*yield*/, this.validate(src, target)];\n                    case 1:\n                        _f.sent();\n                        sharpSrc = sharp_1.default(src) // creates the image object\n                        ;\n                        buildify2 = function (pvar) {\n                            return __awaiter(this, void 0, void 0, function () {\n                                var pngImage, rgb, err_2;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            _a.trys.push([0, 2, , 3]);\n                                            pngImage = sharpSrc.resize(pvar[1], pvar[1]);\n                                            if (pvar[2]) {\n                                                rgb = hexToRgb(options.background_color) || {\n                                                    r: undefined,\n                                                    g: undefined,\n                                                    b: undefined\n                                                };\n                                                pngImage.flatten({\n                                                    background: { r: rgb.r, g: rgb.g, b: rgb.b, alpha: 1 }\n                                                });\n                                            }\n                                            pngImage.png();\n                                            return [4 /*yield*/, pngImage.toFile(pvar[0])];\n                                        case 1:\n                                            _a.sent();\n                                            return [3 /*break*/, 3];\n                                        case 2:\n                                            err_2 = _a.sent();\n                                            warn(err_2);\n                                            return [3 /*break*/, 3];\n                                        case 3: return [2 /*return*/];\n                                    }\n                                });\n                            });\n                        };\n                        folders = uniqueFolders(options);\n                        // eslint-disable-next-line @typescript-eslint/no-for-in-array\n                        for (n in folders) {\n                            folder = folders[Number(n)];\n                            // make the folders first\n                            // TODO: should this be ensureDirSync?\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                            fs_extra_1.ensureDir(\"\" + target + path_1.default.sep + folder);\n                        }\n                        _a = [];\n                        for (_b in options)\n                            _a.push(_b);\n                        _i = 0;\n                        _f.label = 2;\n                    case 2:\n                        if (!(_i < _a.length)) return [3 /*break*/, 7];\n                        optionKey = _a[_i];\n                        option = options[String(optionKey)];\n                        _c = [];\n                        for (_d in option.sizes)\n                            _c.push(_d);\n                        _e = 0;\n                        _f.label = 3;\n                    case 3:\n                        if (!(_e < _c.length)) return [3 /*break*/, 6];\n                        sizeKey = _c[_e];\n                        size = option.sizes[String(sizeKey)];\n                        if (!!option.splash) return [3 /*break*/, 5];\n                        dest = target + \"/\" + option.folder;\n                        if (option.infix === true) {\n                            output = \"\" + dest + path_1.default.sep + option.prefix + size + \"x\" + size + option.suffix;\n                        }\n                        else {\n                            output = \"\" + dest + path_1.default.sep + option.prefix + option.suffix;\n                        }\n                        pvar = [\n                            output,\n                            size,\n                            option.background\n                        ];\n                        return [4 /*yield*/, buildify2(pvar)];\n                    case 4:\n                        _f.sent();\n                        _f.label = 5;\n                    case 5:\n                        _e++;\n                        return [3 /*break*/, 3];\n                    case 6:\n                        _i++;\n                        return [3 /*break*/, 2];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    },\n    /**\n     * Creates a set of splash images (COMING SOON!!!)\n     *\n     * @param {string} src - icon location\n     * @param {string} splashSrc - splashscreen location\n     * @param {string} target - where to drop the images\n     * @param {object} options - js object that defines path and sizes\n     */\n    splash: function (src, splashSrc, target, \n    // TODO: proper type for options\n    options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var output, block, rgb, sharpSrc, data, _a, _b, _i, optionKey, option, _c, _d, _e, sizeKey, size, dest, pvar, sharpData;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        block = false;\n                        rgb = hexToRgb(options.background_color) || {\n                            r: undefined,\n                            g: undefined,\n                            b: undefined\n                        };\n                        if (splashSrc === src) {\n                            // prevent overlay or pure\n                            block = true;\n                        }\n                        if (!(block || options.splashscreen_type === 'generate')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.validate(src, target)];\n                    case 1:\n                        _f.sent();\n                        if (!image) {\n                            process.exit(1);\n                        }\n                        sharpSrc = sharp_1.default(src);\n                        sharpSrc\n                            .extend({\n                            top: 726,\n                            bottom: 726,\n                            left: 726,\n                            right: 726,\n                            background: {\n                                r: rgb.r,\n                                g: rgb.g,\n                                b: rgb.b,\n                                alpha: 1\n                            }\n                        })\n                            .flatten({ background: { r: rgb.r, g: rgb.g, b: rgb.b, alpha: 1 } });\n                        return [3 /*break*/, 3];\n                    case 2:\n                        if (options.splashscreen_type === 'overlay') {\n                            sharpSrc = sharp_1.default(splashSrc)\n                                .flatten({ background: { r: rgb.r, g: rgb.g, b: rgb.b, alpha: 1 } })\n                                .composite([\n                                {\n                                    input: src\n                                    // blend: 'multiply' <= future work, maybe just a gag\n                                }\n                            ]);\n                        }\n                        else if (options.splashscreen_type === 'pure') {\n                            sharpSrc = sharp_1.default(splashSrc).flatten({\n                                background: { r: rgb.r, g: rgb.g, b: rgb.b, alpha: 1 }\n                            });\n                        }\n                        else {\n                            throw new Error(\"unknown options.splashscreen_type: \" + options.splashscreen_type);\n                        }\n                        _f.label = 3;\n                    case 3: return [4 /*yield*/, sharpSrc.toBuffer()];\n                    case 4:\n                        data = _f.sent();\n                        _a = [];\n                        for (_b in options)\n                            _a.push(_b);\n                        _i = 0;\n                        _f.label = 5;\n                    case 5:\n                        if (!(_i < _a.length)) return [3 /*break*/, 11];\n                        optionKey = _a[_i];\n                        option = options[String(optionKey)];\n                        _c = [];\n                        for (_d in option.sizes)\n                            _c.push(_d);\n                        _e = 0;\n                        _f.label = 6;\n                    case 6:\n                        if (!(_e < _c.length)) return [3 /*break*/, 10];\n                        sizeKey = _c[_e];\n                        size = option.sizes[String(sizeKey)];\n                        if (!option.splash) return [3 /*break*/, 9];\n                        dest = \"\" + target + path_1.default.sep + option.folder;\n                        return [4 /*yield*/, fs_extra_1.ensureDir(dest)];\n                    case 7:\n                        _f.sent();\n                        if (option.infix === true) {\n                            output = \"\" + dest + path_1.default.sep + option.prefix + size + \"x\" + size + option.suffix;\n                        }\n                        else {\n                            output = \"\" + dest + path_1.default.sep + option.prefix + option.suffix;\n                        }\n                        pvar = [output, size];\n                        sharpData = sharp_1.default(data);\n                        sharpData = sharpData.resize(pvar[1][0], pvar[1][1]);\n                        return [4 /*yield*/, sharpData.toFile(pvar[0])];\n                    case 8:\n                        _f.sent();\n                        _f.label = 9;\n                    case 9:\n                        _e++;\n                        return [3 /*break*/, 6];\n                    case 10:\n                        _i++;\n                        return [3 /*break*/, 5];\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    },\n    /**\n     * Minifies a set of images\n     *\n     * @param {string} target - image location\n     * @param {object} options - where to drop the images\n     * @param {string} strategy - which minify strategy to use\n     * @param {string} mode - singlefile or batch\n     */\n    minify: function (target, \n    // TODO: proper type for options\n    options, strategy, mode) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cmd, minify, minifier, _a, folders, _b, _c, _i, n, folder;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        minify = settings.options.minify;\n                        if (!minify.available.find(function (x) { return x === strategy; })) {\n                            strategy = minify.type;\n                        }\n                        switch (strategy) {\n                            case 'pngquant':\n                                // TODO: is minify.pngquantOptions the proper format?\n                                cmd = imagemin_pngquant_1.default(minify.pngquantOptions);\n                                break;\n                            case 'optipng':\n                                cmd = imagemin_optipng_1.default(minify.optipngOptions);\n                                break;\n                            case 'zopfli':\n                                cmd = imagemin_zopfli_1.default(minify.zopfliOptions);\n                                break;\n                            default:\n                                throw new Error('unknown strategy' + strategy);\n                        }\n                        minifier = function (pvar, cmd) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, imagemin_1.default([pvar[0]], {\n                                            destination: pvar[1],\n                                            plugins: [cmd]\n                                        }).catch(function (err) {\n                                            warn(err);\n                                        })];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        _a = mode;\n                        switch (_a) {\n                            case 'singlefile': return [3 /*break*/, 1];\n                            case 'batch': return [3 /*break*/, 3];\n                        }\n                        return [3 /*break*/, 8];\n                    case 1: return [4 /*yield*/, minifier([target, path_1.default.dirname(target)], cmd)];\n                    case 2:\n                        _d.sent();\n                        return [3 /*break*/, 9];\n                    case 3:\n                        folders = uniqueFolders(options);\n                        _b = [];\n                        for (_c in folders)\n                            _b.push(_c);\n                        _i = 0;\n                        _d.label = 4;\n                    case 4:\n                        if (!(_i < _b.length)) return [3 /*break*/, 7];\n                        n = _b[_i];\n                        folder = folders[Number(n)];\n                        log('batch minify:' + String(folder));\n                        return [4 /*yield*/, minifier([\n                                \"\" + target + path_1.default.sep + folder + path_1.default.sep + \"*.png\",\n                                \"\" + target + path_1.default.sep + folder\n                            ], cmd)];\n                    case 5:\n                        _d.sent();\n                        _d.label = 6;\n                    case 6:\n                        _i++;\n                        return [3 /*break*/, 4];\n                    case 7: return [3 /*break*/, 9];\n                    case 8:\n                        warn('[ERROR] Minify mode must be one of [ singlefile | batch]');\n                        process.exit(1);\n                        _d.label = 9;\n                    case 9: return [2 /*return*/, 'minified'];\n                }\n            });\n        });\n    },\n    /**\n     * Creates special icns and ico filetypes\n     *\n     * @param {string} src - image location\n     * @param {string} target - where to drop the images\n     * @param {object} options\n     * @param {string} strategy\n     */\n    icns: function (src, target, \n    // TODO: proper type for options\n    options, strategy) {\n        return __awaiter(this, void 0, void 0, function () {\n            var sharpSrc, buf, out, out2, err_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        if (!image) {\n                            process.exit(1);\n                        }\n                        return [4 /*yield*/, this.validate(src, target)];\n                    case 1:\n                        _a.sent();\n                        sharpSrc = sharp_1.default(src);\n                        return [4 /*yield*/, sharpSrc.toBuffer()];\n                    case 2:\n                        buf = _a.sent();\n                        out = png2icons.createICNS(buf, png2icons.BICUBIC, 0);\n                        if (out === null) {\n                            throw new Error('Failed to create icon.icns');\n                        }\n                        fs_extra_1.ensureFileSync(path_1.default.join(target, '/icon.icns'));\n                        fs_extra_1.writeFileSync(path_1.default.join(target, '/icon.icns'), out);\n                        out2 = png2icons.createICO(buf, png2icons.BICUBIC, 0, true);\n                        if (out2 === null) {\n                            throw new Error('Failed to create icon.ico');\n                        }\n                        fs_extra_1.ensureFileSync(path_1.default.join(target, '/icon.ico'));\n                        fs_extra_1.writeFileSync(path_1.default.join(target, '/icon.ico'), out2);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_3 = _a.sent();\n                        console.error(err_3);\n                        throw err_3;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    }\n});\n/* eslint-enable @typescript-eslint/restrict-template-expressions */\nif (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n        exports = module.exports = tauricon;\n    }\n    exports.tauricon = tauricon;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolve = exports.tauriDir = exports.appDir = void 0;\nvar fs_1 = require(\"fs\");\nvar path_1 = require(\"path\");\nvar logger_1 = __importDefault(require(\"./logger\"));\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar warn = logger_1.default('tauri', chalk_1.default.red);\nfunction resolvePath(basePath, dir) {\n    return dir && path_1.isAbsolute(dir) ? dir : path_1.resolve(basePath, dir);\n}\nvar getAppDir = function () {\n    var dir = process.cwd();\n    var count = 0;\n    // only go up three folders max\n    while (dir.length > 0 && !dir.endsWith(path_1.sep) && count <= 2) {\n        if (fs_1.existsSync(path_1.join(dir, 'src-tauri', 'tauri.conf.json'))) {\n            return dir;\n        }\n        count++;\n        dir = path_1.normalize(path_1.join(dir, '..'));\n    }\n    warn(\"Couldn't find recognize the current folder as a part of a Tauri project\");\n    process.exit(1);\n};\nvar appDir = getAppDir();\nexports.appDir = appDir;\nvar tauriDir = path_1.resolve(appDir, 'src-tauri');\nexports.tauriDir = tauriDir;\nvar resolveDir = {\n    app: function (dir) { return resolvePath(appDir, dir); },\n    tauri: function (dir) { return resolvePath(tauriDir, dir); }\n};\nexports.resolve = resolveDir;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar ms_1 = __importDefault(require(\"ms\"));\nvar prevTime;\nexports.default = (function (banner, color) {\n    if (color === void 0) { color = chalk_1.default.green; }\n    return function (msg) {\n        var curr = +new Date();\n        var diff = curr - (prevTime || curr);\n        prevTime = curr;\n        if (msg) {\n            console.log(\n            // TODO: proper typings for color and banner\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call\n            \" \" + color(String(banner)) + \" \" + msg + \" \" + chalk_1.default.green(\"+\" + ms_1.default(diff)));\n        }\n        else {\n            console.log();\n        }\n    };\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.options = void 0;\nexports.options = {\n    // folder determines in which path to drop the generated file\n    // prefix is the first part of the generated file's name\n    // infix adds e.g. '44x44' based on the size in sizes to the generated file's name\n    // suffix adds a file-ending to the generated file's name\n    // sizes determines the pixel width and height to use\n    background_color: '#000074',\n    theme_color: '#02aa9b',\n    sharp: 'kernel: sharp.kernel.lanczos3',\n    minify: {\n        batch: false,\n        overwrite: true,\n        available: ['pngquant', 'optipng', 'zopfli'],\n        type: 'pngquant',\n        pngcrushOptions: {\n            reduce: true\n        },\n        pngquantOptions: {\n            quality: [0.6, 0.8],\n            floyd: 0.1,\n            speed: 10 // 1 - 10\n        },\n        optipngOptions: {\n            optimizationLevel: 4,\n            bitDepthReduction: true,\n            colorTypeReduction: true,\n            paletteReduction: true\n        },\n        zopfliOptions: {\n            transparent: true,\n            more: true\n        }\n    },\n    splash_type: 'generate',\n    tauri: {\n        linux: {\n            folder: '.',\n            prefix: '',\n            infix: true,\n            suffix: '.png',\n            sizes: [32, 128]\n        },\n        linux_2x: {\n            folder: '.',\n            prefix: '128x128@2x',\n            infix: false,\n            suffix: '.png',\n            sizes: [256]\n        },\n        defaults: {\n            folder: '.',\n            prefix: 'icon',\n            infix: false,\n            suffix: '.png',\n            sizes: [512]\n        },\n        appx_logo: {\n            folder: '.',\n            prefix: 'StoreLogo',\n            infix: false,\n            suffix: '.png',\n            sizes: [50]\n        },\n        appx_square: {\n            folder: '.',\n            prefix: 'Square',\n            infix: true,\n            suffix: 'Logo.png',\n            sizes: [30, 44, 71, 89, 107, 142, 150, 284, 310]\n        }\n        // todo: look at capacitor and cordova for insight into what icons\n        // we need for those distribution targets\n    }\n};\n","module.exports = require(\"chalk\");;","module.exports = require(\"fs\");;","module.exports = require(\"fs-extra\");;","module.exports = require(\"imagemin\");;","module.exports = require(\"imagemin-optipng\");;","module.exports = require(\"imagemin-pngquant\");;","module.exports = require(\"imagemin-zopfli\");;","module.exports = require(\"is-png\");;","module.exports = require(\"ms\");;","module.exports = require(\"path\");;","module.exports = require(\"png2icons\");;","module.exports = require(\"read-chunk\");;","module.exports = require(\"sharp\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/api/tauricon.ts\");\n"],"sourceRoot":""}