(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["tauri"] = factory();
	else
		root["tauri"] = factory();
})(global, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./api/tauri.bundle.umd.js":
/*!*********************************!*\
  !*** ./api/tauri.bundle.umd.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(r),!0).forEach((function(t){_defineProperty(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function asyncGeneratorStep(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){asyncGeneratorStep(a,n,o,i,u,\"next\",e)}function u(e){asyncGeneratorStep(a,n,o,i,u,\"throw\",e)}i(void 0)}))}}function _typeof(e){return(_typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}!function(e,t){\"object\"===(\"undefined\"==typeof exports?\"undefined\":_typeof(exports))&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).__TAURI__={})}(this,(function(e){\"use strict\";var t=function(e){var t,r=Object.prototype,n=r.hasOwnProperty,o=\"function\"==typeof Symbol?Symbol:{},a=o.iterator||\"@@iterator\",i=o.asyncIterator||\"@@asyncIterator\",u=o.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function s(e,t,r,n){var o=t&&t.prototype instanceof d?t:d,a=Object.create(o.prototype),i=new G(n||[]);return a._invoke=function(e,t,r){var n=f;return function(o,a){if(n===h)throw new Error(\"Generator is already running\");if(n===y){if(\"throw\"===o)throw a;return D()}for(r.method=o,r.arg=a;;){var i=r.delegate;if(i){var u=P(i,r);if(u){if(u===m)continue;return u}}if(\"next\"===r.method)r.sent=r._sent=r.arg;else if(\"throw\"===r.method){if(n===f)throw n=y,r.arg;r.dispatchException(r.arg)}else\"return\"===r.method&&r.abrupt(\"return\",r.arg);n=h;var c=p(e,t,r);if(\"normal\"===c.type){if(n=r.done?y:l,c.arg===m)continue;return{value:c.arg,done:r.done}}\"throw\"===c.type&&(n=y,r.method=\"throw\",r.arg=c.arg)}}}(e,r,i),a}function p(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}e.wrap=s;var f=\"suspendedStart\",l=\"suspendedYield\",h=\"executing\",y=\"completed\",m={};function d(){}function v(){}function g(){}var w={};w[a]=function(){return this};var b=Object.getPrototypeOf,x=b&&b(b(O([])));x&&x!==r&&n.call(x,a)&&(w=x);var _=g.prototype=d.prototype=Object.create(w);function R(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function T(e,t){function r(o,a,i,u){var c=p(e[o],e,a);if(\"throw\"!==c.type){var s=c.arg,f=s.value;return f&&\"object\"===_typeof(f)&&n.call(f,\"__await\")?t.resolve(f.__await).then((function(e){r(\"next\",e,i,u)}),(function(e){r(\"throw\",e,i,u)})):t.resolve(f).then((function(e){s.value=e,i(s)}),(function(e){return r(\"throw\",e,i,u)}))}u(c.arg)}var o;this._invoke=function(e,n){function a(){return new t((function(t,o){r(e,n,t,o)}))}return o=o?o.then(a,a):a()}}function P(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,\"throw\"===r.method){if(e.iterator.return&&(r.method=\"return\",r.arg=t,P(e,r),\"throw\"===r.method))return m;r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a 'throw' method\")}return m}var o=p(n,e.iterator,r.arg);if(\"throw\"===o.type)return r.method=\"throw\",r.arg=o.arg,r.delegate=null,m;var a=o.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=t),r.delegate=null,m):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,m)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function j(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function G(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(k,this),this.reset(!0)}function O(e){if(e){var r=e[a];if(r)return r.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}return{next:D}}function D(){return{value:t,done:!0}}return v.prototype=_.constructor=g,g.constructor=v,v.displayName=c(g,u,\"GeneratorFunction\"),e.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===v||\"GeneratorFunction\"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(_),e},e.awrap=function(e){return{__await:e}},R(T.prototype),T.prototype[i]=function(){return this},e.AsyncIterator=T,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new T(s(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},R(_),c(_,u,\"Generator\"),_[a]=function(){return this},_.toString=function(){return\"[object Generator]\"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=O,G.prototype={constructor:G,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=t,this.tryEntries.forEach(j),!e)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return u.type=\"throw\",u.arg=e,r.next=n,o&&(r.method=\"next\",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],u=i.completion;if(\"root\"===i.tryLoc)return o(\"end\");if(i.tryLoc<=this.prev){var c=n.call(i,\"catchLoc\"),s=n.call(i,\"finallyLoc\");if(c&&s){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!s)throw new Error(\"try statement without catch or finally\");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var a=o;break}}a&&(\"break\"===e||\"continue\"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method=\"next\",this.next=a.finallyLoc,m):this.complete(i)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),j(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;j(r)}return o}}throw new Error(\"illegal catch attempt\")},delegateYield:function(e,r,n){return this.delegate={iterator:O(e),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=t),m}},e}(\"object\"===(\"undefined\"==typeof module?\"undefined\":_typeof(module))?module.exports:{});try{regeneratorRuntime=t}catch(e){Function(\"r\",\"regeneratorRuntime = r\")(t)}function r(e){for(var t=void 0,r=e[0],n=1;n<e.length;){var o=e[n],a=e[n+1];if(n+=2,(\"optionalAccess\"===o||\"optionalCall\"===o)&&null==r)return;\"access\"===o||\"optionalAccess\"===o?(t=r,r=a(r)):\"call\"!==o&&\"optionalCall\"!==o||(r=a((function(){for(var e,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return(e=r).call.apply(e,[t].concat(o))})),t=void 0)}return r}function n(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}function o(){return n()+n()+\"-\"+n()+\"-\"+n()+\"-\"+n()+\"-\"+n()+n()+n()}function a(e){window.__TAURI_INVOKE_HANDLER__(e)}function i(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=o();return Object.defineProperty(window,n,{value:function(o){return t&&Reflect.deleteProperty(window,n),r([e,\"optionalCall\",function(e){return e(o)}])},writable:!1,configurable:!0}),n}function u(e){return c.apply(this,arguments)}function c(){return(c=_asyncToGenerator(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,new Promise((function(e,r){var n=i((function(t){e(t),Reflect.deleteProperty(window,o)}),!0),o=i((function(e){r(e),Reflect.deleteProperty(window,n)}),!0);a(_objectSpread({callback:n,error:o},t))}));case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}var s=Object.freeze({__proto__:null,invoke:a,transformCallback:i,promisified:u});function p(){return(p=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"cliMatches\"});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}var f=Object.freeze({__proto__:null,getMatches:function(){return p.apply(this,arguments)}});function l(){return(l=_asyncToGenerator(regeneratorRuntime.mark((function e(){var t,r=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return\"object\"===_typeof(t=r.length>0&&void 0!==r[0]?r[0]:{})&&Object.freeze(t),e.next=4,u({cmd:\"openDialog\",options:t});case 4:return e.abrupt(\"return\",e.sent);case 5:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function h(){return(h=_asyncToGenerator(regeneratorRuntime.mark((function e(){var t,r=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return\"object\"===_typeof(t=r.length>0&&void 0!==r[0]?r[0]:{})&&Object.freeze(t),e.next=4,u({cmd:\"saveDialog\",options:t});case 4:return e.abrupt(\"return\",e.sent);case 5:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}var y=Object.freeze({__proto__:null,open:function(){return l.apply(this,arguments)},save:function(){return h.apply(this,arguments)}});var m,d=Object.freeze({__proto__:null,listen:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];a({cmd:\"listen\",event:e,handler:i(t,r),once:r})},emit:function(e,t){a({cmd:\"emit\",event:e,payload:t})}});function v(){return(v=_asyncToGenerator(regeneratorRuntime.mark((function e(t){var r,n=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n.length>1&&void 0!==n[1]?n[1]:{},e.next=3,u({cmd:\"readTextFile\",path:t,options:r});case 3:return e.abrupt(\"return\",e.sent);case 4:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function g(){return(g=_asyncToGenerator(regeneratorRuntime.mark((function e(t){var r,n=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n.length>1&&void 0!==n[1]?n[1]:{},e.next=3,u({cmd:\"readBinaryFile\",path:t,options:r});case 3:return e.abrupt(\"return\",e.sent);case 4:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function w(){return(w=_asyncToGenerator(regeneratorRuntime.mark((function e(t){var r,n=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return\"object\"===_typeof(r=n.length>1&&void 0!==n[1]?n[1]:{})&&Object.freeze(r),\"object\"===_typeof(t)&&Object.freeze(t),e.next=5,u({cmd:\"writeFile\",path:t.path,contents:t.contents,options:r});case 5:return e.abrupt(\"return\",e.sent);case 6:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}!function(e){e[e.Audio=1]=\"Audio\";e[e.Cache=2]=\"Cache\";e[e.Config=3]=\"Config\";e[e.Data=4]=\"Data\";e[e.LocalData=5]=\"LocalData\";e[e.Desktop=6]=\"Desktop\";e[e.Document=7]=\"Document\";e[e.Download=8]=\"Download\";e[e.Executable=9]=\"Executable\";e[e.Font=10]=\"Font\";e[e.Home=11]=\"Home\";e[e.Picture=12]=\"Picture\";e[e.Public=13]=\"Public\";e[e.Runtime=14]=\"Runtime\";e[e.Template=15]=\"Template\";e[e.Video=16]=\"Video\";e[e.Resource=17]=\"Resource\";e[e.App=18]=\"App\"}(m||(m={}));var b=65536;function x(e){var t=function(e){if(e.length<b)return String.fromCharCode.apply(null,Array.from(e));for(var t=\"\",r=e.length,n=0;n<r;n++){var o=e.subarray(n*b,(n+1)*b);t+=String.fromCharCode.apply(null,Array.from(o))}return t}(new Uint8Array(e));return btoa(t)}function _(){return(_=_asyncToGenerator(regeneratorRuntime.mark((function e(t){var r,n=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return\"object\"===_typeof(r=n.length>1&&void 0!==n[1]?n[1]:{})&&Object.freeze(r),\"object\"===_typeof(t)&&Object.freeze(t),e.next=5,u({cmd:\"writeBinaryFile\",path:t.path,contents:x(t.contents),options:r});case 5:return e.abrupt(\"return\",e.sent);case 6:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function R(){return(R=_asyncToGenerator(regeneratorRuntime.mark((function e(t){var r,n=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n.length>1&&void 0!==n[1]?n[1]:{},e.next=3,u({cmd:\"readDir\",path:t,options:r});case 3:return e.abrupt(\"return\",e.sent);case 4:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function T(){return(T=_asyncToGenerator(regeneratorRuntime.mark((function e(t){var r,n=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n.length>1&&void 0!==n[1]?n[1]:{},e.next=3,u({cmd:\"createDir\",path:t,options:r});case 3:return e.abrupt(\"return\",e.sent);case 4:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function P(){return(P=_asyncToGenerator(regeneratorRuntime.mark((function e(t){var r,n=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n.length>1&&void 0!==n[1]?n[1]:{},e.next=3,u({cmd:\"removeDir\",path:t,options:r});case 3:return e.abrupt(\"return\",e.sent);case 4:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function k(){return(k=_asyncToGenerator(regeneratorRuntime.mark((function e(t,r){var n,o=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=o.length>2&&void 0!==o[2]?o[2]:{},e.next=3,u({cmd:\"copyFile\",source:t,destination:r,options:n});case 3:return e.abrupt(\"return\",e.sent);case 4:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function j(){return(j=_asyncToGenerator(regeneratorRuntime.mark((function e(t){var r,n=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n.length>1&&void 0!==n[1]?n[1]:{},e.next=3,u({cmd:\"removeFile\",path:t,options:r});case 3:return e.abrupt(\"return\",e.sent);case 4:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function G(){return(G=_asyncToGenerator(regeneratorRuntime.mark((function e(t,r){var n,o=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=o.length>2&&void 0!==o[2]?o[2]:{},e.next=3,u({cmd:\"renameFile\",oldPath:t,newPath:r,options:n});case 3:return e.abrupt(\"return\",e.sent);case 4:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}var O=Object.freeze({__proto__:null,get BaseDirectory(){return m},get Dir(){return m},readTextFile:function(e){return v.apply(this,arguments)},readBinaryFile:function(e){return g.apply(this,arguments)},writeFile:function(e){return w.apply(this,arguments)},writeBinaryFile:function(e){return _.apply(this,arguments)},readDir:function(e){return R.apply(this,arguments)},createDir:function(e){return T.apply(this,arguments)},removeDir:function(e){return P.apply(this,arguments)},copyFile:function(e,t){return k.apply(this,arguments)},removeFile:function(e){return j.apply(this,arguments)},renameFile:function(e,t){return G.apply(this,arguments)}});function D(){return(D=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.App});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function E(){return(E=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Audio});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function L(){return(L=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Cache});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function S(){return(S=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Config});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function F(){return(F=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Data});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function A(){return(A=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Desktop});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function N(){return(N=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Document});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function z(){return(z=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Download});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function C(){return(C=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Executable});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function B(){return(B=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Font});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function I(){return(I=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Home});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function H(){return(H=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.LocalData});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function M(){return(M=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Picture});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function q(){return(q=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Public});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function K(){return(K=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Resource});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function U(){return(U=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Runtime});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function V(){return(V=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Template});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function J(){return(J=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:\"\",directory:m.Video});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function Y(){return(Y=_asyncToGenerator(regeneratorRuntime.mark((function e(t,r){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"resolvePath\",path:t,directory:r});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}var Q,W,X=Object.freeze({__proto__:null,appDir:function(){return D.apply(this,arguments)},audioDir:function(){return E.apply(this,arguments)},cacheDir:function(){return L.apply(this,arguments)},configDir:function(){return S.apply(this,arguments)},dataDir:function(){return F.apply(this,arguments)},desktopDir:function(){return A.apply(this,arguments)},documentDir:function(){return N.apply(this,arguments)},downloadDir:function(){return z.apply(this,arguments)},executableDir:function(){return C.apply(this,arguments)},fontDir:function(){return B.apply(this,arguments)},homeDir:function(){return I.apply(this,arguments)},localDataDir:function(){return H.apply(this,arguments)},pictureDir:function(){return M.apply(this,arguments)},publicDir:function(){return q.apply(this,arguments)},resourceDir:function(){return K.apply(this,arguments)},runtimeDir:function(){return U.apply(this,arguments)},templateDir:function(){return V.apply(this,arguments)},videoDir:function(){return J.apply(this,arguments)},resolvePath:function(e,t){return Y.apply(this,arguments)}});function Z(e){return $.apply(this,arguments)}function $(){return($=_asyncToGenerator(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,u({cmd:\"httpRequest\",options:t});case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function ee(){return(ee=_asyncToGenerator(regeneratorRuntime.mark((function e(t,r){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Z(_objectSpread({method:\"GET\",url:t},r));case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function te(){return(te=_asyncToGenerator(regeneratorRuntime.mark((function e(t,r,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Z(_objectSpread({method:\"POST\",url:t,body:r},n));case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function re(){return(re=_asyncToGenerator(regeneratorRuntime.mark((function e(t,r,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Z(_objectSpread({method:\"PUT\",url:t,body:r},n));case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function ne(){return(ne=_asyncToGenerator(regeneratorRuntime.mark((function e(t,r){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Z(_objectSpread({method:\"PATCH\",url:t},r));case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function oe(){return(oe=_asyncToGenerator(regeneratorRuntime.mark((function e(t,r){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Z(_objectSpread({method:\"DELETE\",url:t},r));case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}!function(e){e[e.JSON=1]=\"JSON\";e[e.Text=2]=\"Text\";e[e.Binary=3]=\"Binary\"}(Q||(Q={})),function(e){e[e.Form=1]=\"Form\";e[e.File=2]=\"File\";e[e.Auto=3]=\"Auto\"}(W||(W={}));var ae={request:Z,get:function(e,t){return ee.apply(this,arguments)},post:function(e,t,r){return te.apply(this,arguments)},put:function(e,t,r){return re.apply(this,arguments)},patch:function(e,t){return ne.apply(this,arguments)},delete:function(e,t){return oe.apply(this,arguments)},ResponseType:Q,BodyType:W};function ie(){return(ie=_asyncToGenerator(regeneratorRuntime.mark((function e(t,r){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return\"object\"===_typeof(r)&&Object.freeze(r),e.next=3,u({cmd:\"execute\",command:t,args:\"string\"==typeof r?[r]:r});case 3:return e.abrupt(\"return\",e.sent);case 4:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}var ue=Object.freeze({__proto__:null,execute:function(e,t){return ie.apply(this,arguments)}});var ce=Object.freeze({__proto__:null,setTitle:function(e){a({cmd:\"setTitle\",title:e})},open:function(e){a({cmd:\"open\",uri:e})}});function se(){return(se=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(\"default\"===window.Notification.permission){e.next=4;break}return e.next=3,Promise.resolve(\"granted\"===window.Notification.permission);case 3:return e.abrupt(\"return\",e.sent);case 4:return e.next=6,u({cmd:\"isNotificationPermissionGranted\"});case 6:return e.abrupt(\"return\",e.sent);case 7:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function pe(){return(pe=_asyncToGenerator(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.Notification.requestPermission();case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}var fe=Object.freeze({__proto__:null,sendNotification:function(e){\"string\"==typeof e?new window.Notification(e):new window.Notification(e.title,e)},requestPermission:function(){return pe.apply(this,arguments)},isPermissionGranted:function(){return se.apply(this,arguments)}});e.cli=f,e.dialog=y,e.event=d,e.fs=O,e.http=ae,e.notification=fe,e.path=X,e.process=ue,e.tauri=s,e.window=ce,Object.defineProperty(e,\"__esModule\",{value:!0})}));\n");

/***/ }),

/***/ "./templates/mutation-observer.js":
/*!****************************************!*\
  !*** ./templates/mutation-observer.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("(function () {\n  function loadAsset(path, type) {\n    if (path) {\n      window.__TAURI__.loadAsset(path, type)\n    }\n  }\n\n  var observer = new MutationObserver(mutation => {\n    mutation.forEach(function (mutationRecord) {\n      var addedNodes = mutationRecord.addedNodes\n      addedNodes.forEach(function (node) {\n        if (node.nodeType === 1) {\n          if (node.tagName === 'SCRIPT') {\n            node.onload = node.onerror = null\n            loadAsset(node.src)\n          } else if (node.tagName === 'LINK') {\n            if (node.type === 'text/css' || (node.href && node.href.endsWith('.css'))) {\n              loadAsset(node.href, 'stylesheet')\n            }\n          }\n        }\n      })\n    })\n  })\n\n  <% if (target === 'body') { %>\n    var target = document.documentElement\n  <% } else { %>\n    var target = document.head\n  <% } %>\n\n  observer.observe(target, {\n    childList: true,\n    subtree: true\n  })\n})()\n");

/***/ }),

/***/ "./templates/tauri.js":
/*!****************************!*\
  !*** ./templates/tauri.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("// polyfills\nif (!String.prototype.startsWith) {\n  String.prototype.startsWith = function (searchString, position) {\n    position = position || 0\n    return this.substr(position, searchString.length) === searchString\n  }\n}\n\n;(function () {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1)\n  }\n\n  var uid = function () {\n    return (\n      s4() +\n      s4() +\n      '-' +\n      s4() +\n      '-' +\n      s4() +\n      '-' +\n      s4() +\n      '-' +\n      s4() +\n      s4() +\n      s4()\n    )\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object)\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object)\n      if (enumerableOnly)\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable\n        })\n      keys.push.apply(keys, symbols)\n    }\n    return keys\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {}\n      if (i % 2) {\n        ownKeys(source, true).forEach(function (key) {\n          _defineProperty(target, key, source[key])\n        })\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(\n          target,\n          Object.getOwnPropertyDescriptors(source)\n        )\n      } else {\n        ownKeys(source).forEach(function (key) {\n          Object.defineProperty(\n            target,\n            key,\n            Object.getOwnPropertyDescriptor(source, key)\n          )\n        })\n      }\n    }\n    return target\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      })\n    } else {\n      obj[key] = value\n    }\n    return obj\n  }\n\n  if (!window.__TAURI__) {\n    window.__TAURI__ = {}\n  }\n\n  window.__TAURI__.transformCallback = function transformCallback(\n    callback,\n    once\n  ) {\n    var identifier = uid()\n\n    window[identifier] = function (result) {\n      if (once) {\n        delete window[identifier]\n      }\n\n      return callback && callback(result)\n    }\n\n    return identifier\n  }\n\n  window.__TAURI__.promisified = function promisified(args) {\n    var _this = this\n\n    return new Promise(function (resolve, reject) {\n      var callback = _this.transformCallback(function (r) {\n        resolve(r)\n        delete window[error]\n      }, true)\n      var error = _this.transformCallback(function (e) {\n        reject(e)\n        delete window[callback]\n      }, true)\n\n      window.__TAURI_INVOKE_HANDLER__(\n        _objectSpread(\n          {\n            callback: callback,\n            error: error\n          },\n          args\n        )\n      )\n    })\n  }\n\n  window.__TAURI__.loadAsset = function loadAsset(assetName, assetType) {\n    return this.promisified({\n      cmd: 'loadAsset',\n      asset: assetName,\n      assetType: assetType || 'unknown'\n    })\n  }\n\n  document.addEventListener(\n    'error',\n    function (e) {\n      var target = e.target\n      while (target != null) {\n        if (\n          target.matches\n            ? target.matches('img')\n            : target.msMatchesSelector('img')\n        ) {\n          window.__TAURI__.loadAsset(target.src, 'image').then(function (img) {\n            target.src = img\n          })\n          break\n        }\n        target = target.parentElement\n      }\n    },\n    true\n  )\n\n  // open <a href=\"...\"> links with the Tauri API\n  function __openLinks() {\n    document.querySelector('body').addEventListener(\n      'click',\n      function (e) {\n        var target = e.target\n        while (target != null) {\n          if (\n            target.matches ? target.matches('a') : target.msMatchesSelector('a')\n          ) {\n            if (\n              target.href &&\n              target.href.startsWith('http') &&\n              target.target === '_blank'\n            ) {\n              window.__TAURI_INVOKE_HANDLER__({\n                cmd: 'open',\n                uri: target.href\n              })\n              e.preventDefault()\n            }\n            break\n          }\n          target = target.parentElement\n        }\n      },\n      true\n    )\n  }\n\n  if (\n    document.readyState === 'complete' ||\n    document.readyState === 'interactive'\n  ) {\n    __openLinks()\n  } else {\n    window.addEventListener(\n      'DOMContentLoaded',\n      function () {\n        __openLinks()\n      },\n      true\n    )\n  }\n\n  let permissionSettable = false\n  let permissionValue = 'default'\n\n  function isPermissionGranted() {\n    if (window.Notification.permission !== 'default') {\n      return Promise.resolve(window.Notification.permission === 'granted')\n    }\n    return window.__TAURI__.promisified({\n      cmd: 'isNotificationPermissionGranted'\n    })\n  }\n\n  function setNotificationPermission(value) {\n    permissionSettable = true\n    window.Notification.permission = value\n    permissionSettable = false\n  }\n\n  function requestPermission() {\n    return window.__TAURI__\n      .promisified({\n        cmd: 'requestNotificationPermission'\n      })\n      .then(function (permission) {\n        setNotificationPermission(permission)\n        return permission\n      })\n  }\n\n  function sendNotification(options) {\n    if (typeof options === 'object') {\n      Object.freeze(options)\n    }\n\n    isPermissionGranted().then(function (permission) {\n      if (permission) {\n        return window.__TAURI__.promisified({\n          cmd: 'notification',\n          options:\n            typeof options === 'string'\n              ? {\n                  title: options\n                }\n              : options\n        })\n      }\n    })\n  }\n\n  window.Notification = function (title, options) {\n    var opts = options || {}\n    sendNotification(\n      Object.assign(opts, {\n        title: title\n      })\n    )\n  }\n\n  window.Notification.requestPermission = requestPermission\n\n  Object.defineProperty(window.Notification, 'permission', {\n    enumerable: true,\n    get: function () {\n      return permissionValue\n    },\n    set: function (v) {\n      if (!permissionSettable) {\n        throw new Error('Readonly property')\n      }\n      permissionValue = v\n    }\n  })\n\n  isPermissionGranted().then(function (response) {\n    if (response === null) {\n      setNotificationPermission('default')\n    } else {\n      setNotificationPermission(response ? 'granted' : 'denied')\n    }\n  })\n\n  window.alert = function (message) {\n    window.__TAURI_INVOKE_HANDLER__({\n      cmd: 'messageDialog',\n      message: message\n    })\n  }\n\n  window.confirm = function (message) {\n    return window.__TAURI__.promisified({\n      cmd: 'askDialog',\n      message: message\n    })\n  }\n})()\n");

/***/ }),

/***/ "./src/api/dev.ts":
/*!************************!*\
  !*** ./src/api/dev.ts ***!
  \************************/
/***/ (function(module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var webpack_merge_1 = __webpack_require__(/*! webpack-merge */ "webpack-merge");
var runner_1 = __importDefault(__webpack_require__(/*! ../runner */ "./src/runner.ts"));
var tauri_config_1 = __importDefault(__webpack_require__(/*! ../helpers/tauri-config */ "./src/helpers/tauri-config.ts"));
var logger_1 = __importDefault(__webpack_require__(/*! ../helpers/logger */ "./src/helpers/logger.ts"));
var chalk_1 = __importDefault(__webpack_require__(/*! chalk */ "chalk"));
var os_1 = __webpack_require__(/*! os */ "os");
var path_1 = __webpack_require__(/*! path */ "path");
var cross_spawn_1 = __webpack_require__(/*! cross-spawn */ "cross-spawn");
var error = logger_1.default('tauri:dev', chalk_1.default.red);
module.exports = function (config) {
    if (os_1.platform() === 'win32') {
        var child = cross_spawn_1.sync('powershell', [
            path_1.resolve(__dirname, '../../scripts/is-admin.ps1')
        ]);
        var response = String(child.output[1]).replace('\n', '').trim();
        if (response === 'True') {
            error("Administrator privileges detected. Tauri doesn't work when running as admin, see https://github.com/Boscop/web-view/issues/96");
            process.exit(1);
        }
    }
    var tauri = new runner_1.default();
    var tauriConfig = tauri_config_1.default(webpack_merge_1.merge({
        ctx: {
            debug: true,
            dev: true
        }
    }, config));
    return {
        runner: tauri,
        promise: tauri.run(tauriConfig)
    };
};


/***/ }),

/***/ "./src/helpers/app-paths.ts":
/*!**********************************!*\
  !*** ./src/helpers/app-paths.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resolve = exports.tauriDir = exports.appDir = void 0;
var fs_1 = __webpack_require__(/*! fs */ "fs");
var path_1 = __webpack_require__(/*! path */ "path");
var logger_1 = __importDefault(__webpack_require__(/*! ./logger */ "./src/helpers/logger.ts"));
var chalk_1 = __importDefault(__webpack_require__(/*! chalk */ "chalk"));
var warn = logger_1.default('tauri', chalk_1.default.red);
function resolvePath(basePath, dir) {
    return dir && path_1.isAbsolute(dir) ? dir : path_1.resolve(basePath, dir);
}
var getAppDir = function () {
    var dir = process.cwd();
    var count = 0;
    // only go up three folders max
    while (dir.length > 0 && !dir.endsWith(path_1.sep) && count <= 2) {
        if (fs_1.existsSync(path_1.join(dir, 'src-tauri', 'tauri.conf.json'))) {
            return dir;
        }
        count++;
        dir = path_1.normalize(path_1.join(dir, '..'));
    }
    warn("Couldn't find recognize the current folder as a part of a Tauri project");
    process.exit(1);
};
var appDir = getAppDir();
exports.appDir = appDir;
var tauriDir = path_1.resolve(appDir, 'src-tauri');
exports.tauriDir = tauriDir;
var resolveDir = {
    app: function (dir) { return resolvePath(appDir, dir); },
    tauri: function (dir) { return resolvePath(tauriDir, dir); }
};
exports.resolve = resolveDir;


/***/ }),

/***/ "./src/helpers/logger.ts":
/*!*******************************!*\
  !*** ./src/helpers/logger.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var chalk_1 = __importDefault(__webpack_require__(/*! chalk */ "chalk"));
var ms_1 = __importDefault(__webpack_require__(/*! ms */ "ms"));
var prevTime;
exports.default = (function (banner, color) {
    if (color === void 0) { color = chalk_1.default.green; }
    return function (msg) {
        var curr = +new Date();
        var diff = curr - (prevTime || curr);
        prevTime = curr;
        if (msg) {
            console.log(
            // TODO: proper typings for color and banner
            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call
            " " + color(String(banner)) + " " + msg + " " + chalk_1.default.green("+" + ms_1.default(diff)));
        }
        else {
            console.log();
        }
    };
});


/***/ }),

/***/ "./src/helpers/net.ts":
/*!****************************!*\
  !*** ./src/helpers/net.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// forked from https://github.com/quasarframework/quasar/blob/dev/app/lib/helpers/net.js
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isPortAvailable = exports.findClosestOpenPort = void 0;
var net_1 = __importDefault(__webpack_require__(/*! net */ "net"));
function findClosestOpenPort(port, host) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, isPortAvailable(port, host).then(function (isAvailable) {
                        if (isAvailable) {
                            return port;
                        }
                        else if (port < 65535) {
                            return findClosestOpenPort(port + 1, host);
                        }
                        else {
                            throw new Error('ERROR_NETWORK_PORT_NOT_AVAIL');
                        }
                    })];
                case 1: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
exports.findClosestOpenPort = findClosestOpenPort;
function isPortAvailable(port, host) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, new Promise(function (resolve, reject) {
                        var tester = net_1.default
                            .createServer()
                            .once('error', function (err) {
                            if (err.code === 'EADDRNOTAVAIL') {
                                reject(new Error('ERROR_NETWORK_ADDRESS_NOT_AVAIL'));
                            }
                            else if (err.code === 'EADDRINUSE') {
                                resolve(false); // host/port in use
                            }
                            else {
                                reject(err);
                            }
                        })
                            .once('listening', function () {
                            tester
                                .once('close', function () {
                                resolve(true); // found available host/port
                            })
                                .close();
                        })
                            .on('error', function (err) {
                            reject(err);
                        })
                            .listen(port, host);
                    })];
                case 1: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
exports.isPortAvailable = isPortAvailable;


/***/ }),

/***/ "./src/helpers/non-webpack-require.ts":
/*!********************************************!*\
  !*** ./src/helpers/non-webpack-require.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
// this function has been moved to a module so we can mock it
exports.default = (function (path) {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return require(path);
});


/***/ }),

/***/ "./src/helpers/on-shutdown.ts":
/*!************************************!*\
  !*** ./src/helpers/on-shutdown.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.default = (function (fn) {
    var cleanup = function () {
        try {
            fn();
        }
        finally {
            process.exit();
        }
    };
    process.on('exit', cleanup);
    process.on('SIGINT', cleanup);
    process.on('SIGTERM', cleanup);
    process.on('SIGHUP', cleanup);
    process.on('SIGBREAK', cleanup);
});


/***/ }),

/***/ "./src/helpers/spawn.ts":
/*!******************************!*\
  !*** ./src/helpers/spawn.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.spawnSync = exports.spawn = void 0;
var cross_spawn_1 = __importDefault(__webpack_require__(/*! cross-spawn */ "cross-spawn"));
var logger_1 = __importDefault(__webpack_require__(/*! ./logger */ "./src/helpers/logger.ts"));
var chalk_1 = __importDefault(__webpack_require__(/*! chalk */ "chalk"));
var log = logger_1.default('app:spawn');
var warn = logger_1.default('app:spawn', chalk_1.default.red);
/*
  Returns pid, takes onClose
 */
var spawn = function (cmd, params, cwd, onClose) {
    log("Running \"" + cmd + " " + params.join(' ') + "\"");
    log();
    // TODO: move to execa?
    var runner = cross_spawn_1.default(cmd, params, {
        stdio: 'inherit',
        cwd: cwd,
        env: process.env
    });
    runner.on('close', function (code) {
        log();
        if (code) {
            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
            log("Command \"" + cmd + "\" failed with exit code: " + code);
        }
        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain
        onClose && onClose(code, runner.pid);
    });
    return runner.pid;
};
exports.spawn = spawn;
/*
  Returns nothing, takes onFail
 */
var spawnSync = function (cmd, params, cwd, onFail) {
    log("[sync] Running \"" + cmd + " " + params.join(' ') + "\"");
    log();
    var runner = cross_spawn_1.default.sync(cmd, params, {
        stdio: 'inherit',
        cwd: cwd
    });
    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing
    if (runner.status || runner.error) {
        warn();
        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
        warn("\u26A0\uFE0F  Command \"" + cmd + "\" failed with exit code: " + runner.status);
        if (runner.status === null) {
            warn("\u26A0\uFE0F  Please globally install \"" + cmd + "\"");
        }
        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain
        onFail && onFail();
        process.exit(1);
    }
};
exports.spawnSync = spawnSync;


/***/ }),

/***/ "./src/helpers/tauri-config.ts":
/*!*************************************!*\
  !*** ./src/helpers/tauri-config.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var fs_extra_1 = __webpack_require__(/*! fs-extra */ "fs-extra");
var webpack_merge_1 = __webpack_require__(/*! webpack-merge */ "webpack-merge");
var logger_1 = __importDefault(__webpack_require__(/*! ../helpers/logger */ "./src/helpers/logger.ts"));
var appPaths = __importStar(__webpack_require__(/*! ./app-paths */ "./src/helpers/app-paths.ts"));
var non_webpack_require_1 = __importDefault(__webpack_require__(/*! ../helpers/non-webpack-require */ "./src/helpers/non-webpack-require.ts"));
var chalk_1 = __importDefault(__webpack_require__(/*! chalk */ "chalk"));
var config_validator_1 = __webpack_require__(/*! ../types/config.validator */ "./src/types/config.validator.ts");
var error = logger_1.default('ERROR:', chalk_1.default.red);
var getTauriConfig = function (cfg) {
    var _a, _b, _c;
    var pkgPath = appPaths.resolve.app('package.json');
    var tauriConfPath = appPaths.resolve.tauri('tauri.conf.json');
    if (!fs_extra_1.existsSync(tauriConfPath)) {
        error("Could not find a tauri config (tauri.conf.json) in your app's directory.");
        process.exit(1);
    }
    var tauriConf = JSON.parse(fs_extra_1.readFileSync(tauriConfPath).toString());
    var pkg = fs_extra_1.existsSync(pkgPath)
        ? non_webpack_require_1.default(pkgPath)
        : null;
    var config = webpack_merge_1.merge({
        build: {},
        ctx: {},
        tauri: {
            embeddedServer: {
                active: true
            },
            bundle: {
                active: true,
                icon: [],
                resources: [],
                externalBin: [],
                deb: {
                    depends: []
                },
                osx: {
                    frameworks: []
                }
            },
            allowlist: {
                all: false
            },
            window: {
                title: (_a = pkg === null || pkg === void 0 ? void 0 : pkg.productName) !== null && _a !== void 0 ? _a : 'Tauri App'
            },
            security: {
                csp: "default-src blob: data: filesystem: ws: http: https: 'unsafe-eval' 'unsafe-inline'"
            },
            inliner: {
                active: true
            }
        }
    }, tauriConf, cfg);
    if (!config_validator_1.isTauriConfig(config)) {
        var messages = config_validator_1.ajv
            .errorsText((_b = config_validator_1.isTauriConfig.errors) === null || _b === void 0 ? void 0 : _b.filter(function (e) { return e.keyword !== 'if'; }).map(function (e) {
            e.dataPath = e.dataPath.replace(/\./g, ' > ');
            if (e.keyword === 'additionalProperties' &&
                typeof e.message === 'string' &&
                'additionalProperty' in e.params) {
                e.message = "has unknown property " + e.params.additionalProperty;
            }
            return e;
        }), { dataVar: 'tauri.conf.json', separator: '\n' })
            .split('\n');
        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {
            var message = messages_1[_i];
            error(message);
        }
        process.exit(1);
    }
    var runningDevServer = (_c = config.build.devPath) === null || _c === void 0 ? void 0 : _c.startsWith('http');
    if (!runningDevServer) {
        config.build.devPath = appPaths.resolve.tauri(config.build.devPath);
        process.env.TAURI_DIST_DIR = config.build.devPath;
    }
    if (config.build.distDir) {
        config.build.distDir = appPaths.resolve.tauri(config.build.distDir);
        process.env.TAURI_DIST_DIR = config.build.distDir;
    }
    // OSX bundle config
    if (config.tauri.bundle.osx) {
        var license = config.tauri.bundle.osx.license;
        if (typeof license === 'string') {
            config.tauri.bundle.osx.license = appPaths.resolve.tauri(license);
        }
        else if (license !== null) {
            var licensePath = appPaths.resolve.app('LICENSE');
            if (fs_extra_1.existsSync(licensePath)) {
                config.tauri.bundle.osx.license = licensePath;
            }
        }
    }
    // bundle targets
    if (Array.isArray(config.tauri.bundle.targets)) {
        if (process.platform !== 'win32') {
            config.tauri.bundle.targets = config.tauri.bundle.targets.filter(function (t) { return t !== 'msi'; });
        }
    }
    process.env.TAURI_DIR = appPaths.tauriDir;
    process.env.TAURI_CONFIG = JSON.stringify(config);
    return config;
};
exports.default = getTauriConfig;


/***/ }),

/***/ "./src/runner.ts":
/*!***********************!*\
  !*** ./src/runner.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tauri_inliner_1 = __importDefault(__webpack_require__(/*! @tauri-apps/tauri-inliner */ "@tauri-apps/tauri-inliner"));
var toml_1 = __importDefault(__webpack_require__(/*! @tauri-apps/toml */ "@tauri-apps/toml"));
var chokidar_1 = __importDefault(__webpack_require__(/*! chokidar */ "chokidar"));
var fs_extra_1 = __webpack_require__(/*! fs-extra */ "fs-extra");
var jsdom_1 = __webpack_require__(/*! jsdom */ "jsdom");
var lodash_1 = __webpack_require__(/*! lodash */ "lodash");
var path_1 = __importDefault(__webpack_require__(/*! path */ "path"));
var http_1 = __importDefault(__webpack_require__(/*! http */ "http"));
var os_1 = __importDefault(__webpack_require__(/*! os */ "os"));
var net_1 = __webpack_require__(/*! ./helpers/net */ "./src/helpers/net.ts");
var app_paths_1 = __webpack_require__(/*! ./helpers/app-paths */ "./src/helpers/app-paths.ts");
var logger_1 = __importDefault(__webpack_require__(/*! ./helpers/logger */ "./src/helpers/logger.ts"));
var on_shutdown_1 = __importDefault(__webpack_require__(/*! ./helpers/on-shutdown */ "./src/helpers/on-shutdown.ts"));
var spawn_1 = __webpack_require__(/*! ./helpers/spawn */ "./src/helpers/spawn.ts");
var child_process_1 = __webpack_require__(/*! child_process */ "child_process");
var tauri_config_1 = __importDefault(__webpack_require__(/*! ./helpers/tauri-config */ "./src/helpers/tauri-config.ts"));
var http_proxy_1 = __importDefault(__webpack_require__(/*! http-proxy */ "http-proxy"));
var is_reachable_1 = __importDefault(__webpack_require__(/*! is-reachable */ "is-reachable"));
var chalk_1 = __importDefault(__webpack_require__(/*! chalk */ "chalk"));
var log = logger_1.default('app:tauri');
var warn = logger_1.default('app:tauri (runner)', chalk_1.default.red);
var WATCHER_INTERVAL = 1000;
var Runner = /** @class */ (function () {
    function Runner() {
        var _this = this;
        this.rewritingToml = false;
        this.pid = 0;
        this.tauriWatcher = undefined;
        on_shutdown_1.default(function () {
            _this.stop().catch(function (e) {
                throw e;
            });
        });
    }
    Runner.prototype.run = function (cfg) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var devPath, ls, devTryCount, devTryTimeout_1, cargoManifest, runningDevServer, inlinedAssets, self_1, devUrl_1, proxy_1, proxyServer, port, devServer, startDevTauri, tauriPaths, tauriPath;
            var _this = this;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        devPath = cfg.build.devPath;
                        if (!this.pid) return [3 /*break*/, 2];
                        if (!(this.devPath !== devPath)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.stop()];
                    case 1:
                        _c.sent();
                        _c.label = 2;
                    case 2:
                        if (!(!this.beforeDevProcess && cfg.build.beforeDevCommand)) return [3 /*break*/, 6];
                        log('Running `' + cfg.build.beforeDevCommand + '`');
                        ls = child_process_1.exec(cfg.build.beforeDevCommand, {
                            cwd: app_paths_1.appDir,
                            env: process.env
                        }, function (error) {
                            if (error) {
                                process.exit(1);
                            }
                        });
                        (_a = ls.stderr) === null || _a === void 0 ? void 0 : _a.pipe(process.stderr);
                        (_b = ls.stdout) === null || _b === void 0 ? void 0 : _b.pipe(process.stdout);
                        this.beforeDevProcess = ls;
                        devTryCount = 0;
                        devTryTimeout_1 = 3000;
                        _c.label = 3;
                    case 3: return [4 /*yield*/, is_reachable_1.default(devPath)];
                    case 4:
                        if (!!(_c.sent())) return [3 /*break*/, 6];
                        log('Waiting for your dev server to start...');
                        return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, devTryTimeout_1); })];
                    case 5:
                        _c.sent();
                        devTryCount++;
                        if (devTryCount === 10) {
                            warn("Couldn't connect to " + devPath + " after " + (devTryTimeout_1 * devTryCount) / 1000 + "s. Please make sure that's the URL to your dev server.");
                            process.exit(1);
                        }
                        return [3 /*break*/, 3];
                    case 6:
                        cargoManifest = this.__getManifest();
                        this.__allowlistApi(cfg, cargoManifest);
                        this.__rewriteManifest(cargoManifest);
                        runningDevServer = devPath.startsWith('http');
                        inlinedAssets = [];
                        if (!runningDevServer) return [3 /*break*/, 8];
                        self_1 = this;
                        devUrl_1 = new URL(devPath);
                        proxy_1 = http_proxy_1.default.createProxyServer({
                            ws: true,
                            target: {
                                host: devUrl_1.hostname,
                                port: devUrl_1.port
                            },
                            selfHandleResponse: true
                        });
                        proxy_1.on('proxyRes', function (proxyRes, req, res) {
                            if (req.url === '/') {
                                var body_1 = [];
                                proxyRes.on('data', function (chunk) {
                                    body_1.push(chunk);
                                });
                                proxyRes.on('end', function () {
                                    var bodyStr = body_1.join('');
                                    var indexDir = os_1.default.tmpdir();
                                    fs_extra_1.writeFileSync(path_1.default.join(indexDir, 'index.html'), bodyStr);
                                    self_1
                                        .__parseHtml(cfg, indexDir, false)
                                        .then(function (_a) {
                                        var html = _a.html;
                                        var headers = {};
                                        if (proxyRes.headers['content-type']) {
                                            headers['content-type'] = proxyRes.headers['content-type'];
                                        }
                                        else {
                                            var charsetMatch = /charset="(\S+)"/g.exec(bodyStr);
                                            if (charsetMatch) {
                                                headers['content-type'] = "'text/html; charset=" + charsetMatch[1];
                                            }
                                        }
                                        res.writeHead(200, headers);
                                        res.end(html);
                                    })
                                        .catch(function (err) {
                                        res.writeHead(500, JSON.stringify(err));
                                        res.end();
                                    });
                                });
                            }
                            else {
                                if (proxyRes.statusCode) {
                                    res = res.writeHead(proxyRes.statusCode, proxyRes.headers);
                                }
                                proxyRes.pipe(res);
                            }
                        });
                        proxy_1.on('error', function (error, _, res) {
                            var _a;
                            if ((_a = error.message) === null || _a === void 0 ? void 0 : _a.includes('ECONNREFUSED')) {
                                warn("Connection refused to " + devUrl_1.protocol + "//" + devUrl_1.host + ". Did you start your dev server? Usually that's done with a `dev` or `serve` NPM script.");
                            }
                            else {
                                console.error(error);
                            }
                            res.writeHead(500, error.message);
                        });
                        proxyServer = http_1.default.createServer(function (req, res) {
                            delete req.headers['accept-encoding'];
                            proxy_1.web(req, res);
                        });
                        proxyServer.on('upgrade', function (req, socket, head) {
                            proxy_1.ws(req, socket, head);
                        });
                        return [4 /*yield*/, net_1.findClosestOpenPort(parseInt(devUrl_1.port) + 1, devUrl_1.hostname)];
                    case 7:
                        port = _c.sent();
                        devServer = proxyServer.listen(port);
                        this.devServer = devServer;
                        devPath = devUrl_1.protocol + "//localhost:" + port;
                        cfg.build.devPath = devPath;
                        process.env.TAURI_CONFIG = JSON.stringify(cfg);
                        return [3 /*break*/, 10];
                    case 8: return [4 /*yield*/, this.__parseHtml(cfg, devPath)];
                    case 9:
                        inlinedAssets = (_c.sent()).inlinedAssets;
                        _c.label = 10;
                    case 10:
                        process.env.TAURI_INLINED_ASSETS = inlinedAssets.join('|');
                        this.devPath = devPath;
                        startDevTauri = function () { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.__runCargoCommand({
                                            cargoArgs: ['run'],
                                            dev: true,
                                            exitOnPanic: cfg.ctx.exitOnPanic
                                        })];
                                    case 1: return [2 /*return*/, _a.sent()];
                                }
                            });
                        }); };
                        tauriPaths = [];
                        if (typeof cargoManifest.dependencies.tauri !== 'string' &&
                            cargoManifest.dependencies.tauri.path) {
                            tauriPath = path_1.default.resolve(app_paths_1.tauriDir, cargoManifest.dependencies.tauri.path);
                            tauriPaths = [
                                tauriPath,
                                tauriPath + "-api",
                                tauriPath + "-updater",
                                tauriPath + "-utils"
                            ];
                        }
                        if (!this.tauriWatcher) {
                            // eslint-disable-next-line security/detect-non-literal-fs-filename
                            this.tauriWatcher = chokidar_1.default
                                .watch(__spreadArrays([
                                path_1.default.join(app_paths_1.tauriDir, 'src'),
                                path_1.default.join(app_paths_1.tauriDir, 'Cargo.toml'),
                                path_1.default.join(app_paths_1.tauriDir, 'build.rs'),
                                path_1.default.join(app_paths_1.tauriDir, 'tauri.conf.json')
                            ], tauriPaths).concat(runningDevServer ? [] : [devPath]), {
                                ignoreInitial: true,
                                ignored: [
                                    runningDevServer ? null : path_1.default.join(devPath, 'index.tauri.html')
                                ].concat(path_1.default.join(app_paths_1.tauriDir, 'target'))
                            })
                                .on('change', lodash_1.debounce(function (changedPath) {
                                if (_this.rewritingToml &&
                                    changedPath.startsWith(path_1.default.join(app_paths_1.tauriDir, 'Cargo.toml'))) {
                                    return;
                                }
                                ;
                                (_this.pid ? _this.__stopCargo() : Promise.resolve())
                                    .then(function () {
                                    var shouldTriggerRun = changedPath.includes('tauri.conf.json') ||
                                        changedPath.startsWith(devPath);
                                    if (shouldTriggerRun) {
                                        _this.run(tauri_config_1.default({ ctx: cfg.ctx })).catch(function (e) {
                                            throw e;
                                        });
                                    }
                                    else {
                                        startDevTauri().catch(function (e) {
                                            throw e;
                                        });
                                    }
                                })
                                    .catch(function (err) {
                                    warn(err);
                                    process.exit(1);
                                });
                            }, WATCHER_INTERVAL));
                        }
                        return [2 /*return*/, startDevTauri()];
                }
            });
        });
    };
    Runner.prototype.build = function (cfg) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, command, args, cargoManifest, inlinedAssets, features, buildFn, targets, _i, targets_1, target;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (cfg.build.beforeBuildCommand) {
                            _a = cfg.build.beforeBuildCommand.split(' '), command = _a[0], args = _a.slice(1);
                            spawn_1.spawnSync(command, args, app_paths_1.appDir);
                        }
                        cargoManifest = this.__getManifest();
                        this.__allowlistApi(cfg, cargoManifest);
                        this.__rewriteManifest(cargoManifest);
                        return [4 /*yield*/, this.__parseHtml(cfg, cfg.build.distDir)];
                    case 1:
                        inlinedAssets = (_b.sent())
                            .inlinedAssets;
                        process.env.TAURI_INLINED_ASSETS = inlinedAssets.join('|');
                        features = [
                            cfg.tauri.embeddedServer.active ? 'embedded-server' : 'no-server'
                        ];
                        buildFn = function (target) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.__runCargoCommand({
                                            cargoArgs: __spreadArrays([
                                                cfg.tauri.bundle.active ? 'tauri-bundler' : 'build',
                                                '--features'
                                            ], features, (cfg.tauri.bundle.active &&
                                                Array.isArray(cfg.tauri.bundle.targets) &&
                                                cfg.tauri.bundle.targets.length
                                                ? ['--format'].concat(cfg.tauri.bundle.targets)
                                                : [])).concat(cfg.ctx.debug ? [] : ['--release'])
                                                .concat(cfg.verbose ? ['--verbose'] : [])
                                                .concat(target ? ['--target', target] : [])
                                        })];
                                    case 1: return [2 /*return*/, _a.sent()];
                                }
                            });
                        }); };
                        if (!!cfg.ctx.target) return [3 /*break*/, 3];
                        // if no target specified,
                        // build only for the current platform
                        return [4 /*yield*/, buildFn()];
                    case 2:
                        // if no target specified,
                        // build only for the current platform
                        _b.sent();
                        return [3 /*break*/, 7];
                    case 3:
                        targets = cfg.ctx.target.split(',');
                        _i = 0, targets_1 = targets;
                        _b.label = 4;
                    case 4:
                        if (!(_i < targets_1.length)) return [3 /*break*/, 7];
                        target = targets_1[_i];
                        return [4 /*yield*/, buildFn(target)];
                    case 5:
                        _b.sent();
                        _b.label = 6;
                    case 6:
                        _i++;
                        return [3 /*break*/, 4];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    Runner.prototype.__parseHtml = function (cfg, indexDir, inlinerEnabled) {
        if (inlinerEnabled === void 0) { inlinerEnabled = cfg.tauri.inliner.active; }
        return __awaiter(this, void 0, void 0, function () {
            var inlinedAssets;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        inlinedAssets = [];
                        return [4 /*yield*/, new Promise(function (resolve, reject) {
                                var indexPath = path_1.default.join(indexDir, 'index.html');
                                if (!fs_extra_1.existsSync(indexPath)) {
                                    warn("Error: cannot find index.html in \"" + indexDir + "\". Did you forget to build your web code or update the build.distDir in tauri.conf.json?");
                                    reject(new Error('Could not find index.html in dist dir.'));
                                }
                                var originalHtml = fs_extra_1.readFileSync(indexPath).toString();
                                var rewriteHtml = function (html, interceptor) {
                                    var dom = new jsdom_1.JSDOM(html);
                                    var document = dom.window.document;
                                    if (interceptor !== undefined) {
                                        interceptor(dom);
                                    }
                                    if (!(
                                    /* eslint-disable @typescript-eslint/prefer-nullish-coalescing */
                                    ((cfg.ctx.dev && cfg.build.devPath.startsWith('http')) ||
                                        cfg.tauri.embeddedServer.active)
                                    /* eslint-enable */
                                    )) {
                                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-member-access
                                        var mutationObserverTemplate = __webpack_require__(/*! ../templates/mutation-observer */ "./templates/mutation-observer.js").default;
                                        var compiledMutationObserver = lodash_1.template(mutationObserverTemplate);
                                        var bodyMutationObserverScript = document.createElement('script');
                                        bodyMutationObserverScript.text = compiledMutationObserver({
                                            target: 'body',
                                            inlinedAssets: JSON.stringify(inlinedAssets)
                                        });
                                        document.body.insertBefore(bodyMutationObserverScript, document.body.firstChild);
                                        var headMutationObserverScript = document.createElement('script');
                                        headMutationObserverScript.text = compiledMutationObserver({
                                            target: 'head',
                                            inlinedAssets: JSON.stringify(inlinedAssets)
                                        });
                                        document.head.insertBefore(headMutationObserverScript, document.head.firstChild);
                                    }
                                    var tauriScript = document.createElement('script');
                                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-member-access
                                    tauriScript.text = __webpack_require__(/*! ../templates/tauri.js */ "./templates/tauri.js").default;
                                    document.head.insertBefore(tauriScript, document.head.firstChild);
                                    if (cfg.build.withGlobalTauri) {
                                        var tauriUmdScript = document.createElement('script');
                                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-member-access
                                        tauriUmdScript.text = __webpack_require__(/*! ../api/tauri.bundle.umd */ "./api/tauri.bundle.umd.js").default;
                                        document.head.insertBefore(tauriUmdScript, document.head.firstChild);
                                    }
                                    var csp = cfg.tauri.security.csp;
                                    if (csp) {
                                        var cspTag = document.createElement('meta');
                                        cspTag.setAttribute('http-equiv', 'Content-Security-Policy');
                                        cspTag.setAttribute('content', csp);
                                        document.head.appendChild(cspTag);
                                    }
                                    var newHtml = dom.serialize();
                                    fs_extra_1.writeFileSync(path_1.default.join(indexDir, 'index.tauri.html'), newHtml);
                                    return newHtml;
                                };
                                var domInterceptor = cfg.tauri.embeddedServer.active
                                    ? undefined
                                    : function (dom) {
                                        var document = dom.window.document;
                                        if (!cfg.ctx.dev) {
                                            document
                                                .querySelectorAll('link')
                                                .forEach(function (link) {
                                                link.removeAttribute('rel');
                                                link.removeAttribute('as');
                                            });
                                        }
                                    };
                                if (
                                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing
                                (!cfg.ctx.dev && cfg.tauri.embeddedServer.active) ||
                                    !inlinerEnabled) {
                                    var html = rewriteHtml(originalHtml, domInterceptor);
                                    resolve({ inlinedAssets: inlinedAssets, html: html });
                                }
                                else {
                                    var cwd_1 = process.cwd();
                                    process.chdir(indexDir); // the inliner requires this to properly work
                                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call
                                    var inliner = new tauri_inliner_1.default({ source: originalHtml }, function (err, html) {
                                        process.chdir(cwd_1); // reset CWD
                                        if (err) {
                                            reject(err);
                                        }
                                        else {
                                            var rewrittenHtml = rewriteHtml(html, domInterceptor);
                                            resolve({ inlinedAssets: inlinedAssets, html: rewrittenHtml });
                                        }
                                    });
                                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call
                                    inliner.on('progress', function (event) {
                                        var match = event.match(/([\S\d]+)\.([\S\d]+)/g);
                                        match && inlinedAssets.push(match[0]);
                                    });
                                }
                            })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Runner.prototype.stop = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, new Promise(function (resolve, reject) {
                            var _a, _b;
                            (_a = _this.devServer) === null || _a === void 0 ? void 0 : _a.close();
                            (_b = _this.tauriWatcher) === null || _b === void 0 ? void 0 : _b.close().catch(reject);
                            _this.__stopCargo().then(resolve).catch(reject);
                        })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Runner.prototype.__runCargoCommand = function (_a) {
        var cargoArgs = _a.cargoArgs, extraArgs = _a.extraArgs, _b = _a.dev, dev = _b === void 0 ? false : _b, _c = _a.exitOnPanic, exitOnPanic = _c === void 0 ? true : _c;
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0: return [4 /*yield*/, new Promise(function (resolve, reject) {
                            _this.pid = spawn_1.spawn('cargo', extraArgs ? cargoArgs.concat(['--']).concat(extraArgs) : cargoArgs, app_paths_1.tauriDir, function (code, pid) {
                                if (_this.killPromise) {
                                    _this.killPromise();
                                    _this.killPromise = undefined;
                                    resolve();
                                    return;
                                }
                                if (pid !== _this.pid) {
                                    resolve();
                                    return;
                                }
                                if (dev && !exitOnPanic && code === 101) {
                                    _this.pid = 0;
                                    resolve();
                                    return;
                                }
                                if (code) {
                                    warn();
                                    warn('⚠️  [FAIL] Cargo CLI has failed');
                                    warn();
                                    reject(new Error('Cargo failed with status code ' + code.toString()));
                                    process.exit(1);
                                }
                                else if (!dev) {
                                    resolve();
                                }
                                if (dev) {
                                    warn();
                                    warn('Cargo process was killed. Exiting...');
                                    warn();
                                    process.exit(0);
                                }
                                resolve();
                            });
                            if (dev) {
                                resolve();
                            }
                        })];
                    case 1: return [2 /*return*/, _d.sent()];
                }
            });
        });
    };
    Runner.prototype.__stopCargo = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!!this.pid) return [3 /*break*/, 2];
                        return [4 /*yield*/, Promise.resolve()];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        log('Shutting down tauri process...');
                        return [4 /*yield*/, new Promise(function (resolve, reject) {
                                _this.killPromise = resolve;
                                try {
                                    process.kill(_this.pid);
                                    _this.pid = 0;
                                }
                                catch (e) {
                                    reject(e);
                                }
                            })];
                    case 3: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Runner.prototype.__getManifestPath = function () {
        return path_1.default.join(app_paths_1.tauriDir, 'Cargo.toml');
    };
    Runner.prototype.__getManifest = function () {
        var tomlPath = this.__getManifestPath();
        var tomlFile = fs_extra_1.readFileSync(tomlPath).toString();
        var cargoManifest = toml_1.default.parse(tomlFile);
        return cargoManifest;
    };
    Runner.prototype.__rewriteManifest = function (cargoManifest) {
        var _this = this;
        var tomlPath = this.__getManifestPath();
        var output = toml_1.default.stringify(cargoManifest);
        this.rewritingToml = true;
        fs_extra_1.writeFileSync(tomlPath, output);
        setTimeout(function () {
            _this.rewritingToml = false;
        }, WATCHER_INTERVAL * 2);
    };
    Runner.prototype.__allowlistApi = function (cfg, manifest) {
        var tomlFeatures = [];
        if (cfg.tauri.allowlist.all) {
            tomlFeatures.push('all-api');
        }
        else {
            var toKebabCase = function (value) {
                return value
                    .replace(/([a-z])([A-Z])/g, '$1-$2')
                    .replace(/\s+/g, '-')
                    .toLowerCase();
            };
            var allowlist = Object.keys(cfg.tauri.allowlist).filter(function (w) { return cfg.tauri.allowlist[String(w)]; });
            tomlFeatures.push.apply(tomlFeatures, allowlist.map(toKebabCase));
        }
        if (cfg.tauri.cli) {
            tomlFeatures.push('cli');
        }
        if (typeof manifest.dependencies.tauri === 'string') {
            manifest.dependencies.tauri = {
                version: manifest.dependencies.tauri,
                features: tomlFeatures
            };
        }
        else {
            manifest.dependencies.tauri.features = tomlFeatures;
        }
    };
    return Runner;
}());
exports.default = Runner;


/***/ }),

/***/ "./src/types/config.validator.ts":
/*!***************************************!*\
  !*** ./src/types/config.validator.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isTauriConfig = exports.TauriConfigSchema = exports.ajv = void 0;
/* tslint:disable */
// generated by typescript-json-validator
var util_1 = __webpack_require__(/*! util */ "util");
var ajv_1 = __importDefault(__webpack_require__(/*! ajv */ "ajv"));
exports.ajv = new ajv_1.default({
    allErrors: true,
    coerceTypes: false,
    format: 'fast',
    nullable: true,
    unicode: true,
    uniqueItems: true,
    useDefaults: true
});
exports.ajv.addMetaSchema(__webpack_require__(/*! ajv/lib/refs/json-schema-draft-06.json */ "ajv/lib/refs/json-schema-draft-06.json"));
exports.TauriConfigSchema = {
    $schema: 'http://json-schema.org/draft-07/schema#',
    additionalProperties: false,
    defaultProperties: [],
    definitions: {
        CliArg: {
            additionalProperties: false,
            defaultProperties: [],
            description: 'A CLI argument definition',
            properties: {
                conflictsWith: {
                    description: "sets a conflicting argument by name\ni.e. when using this argument, the following argument can't be present and vice versa",
                    type: 'string'
                },
                conflictsWithAll: {
                    description: 'the same as conflictsWith but allows specifying multiple two-way conflicts per argument',
                    type: 'string'
                },
                description: {
                    description: 'the argument description which will be shown on the help information\ntypically, this is a short (one line) description of the arg',
                    type: 'string'
                },
                index: {
                    description: 'The positional argument index, starting at 1.\n\nThe index refers to position according to other positional argument.\nIt does not define position in the argument list as a whole. When utilized with multiple=true,\nonly the last positional argument may be defined as multiple (i.e. the one with the highest index).',
                    type: 'number'
                },
                longDescription: {
                    description: 'the argument long description which will be shown on the help information\ntypically this a more detailed (multi-line) message that describes the argument',
                    type: 'string'
                },
                maxValues: {
                    description: "specifies the maximum number of values are for this argument.\nfor example, if you had a -f <file> argument where you wanted up to 3 'files' you would set .max_values(3), and this argument would be satisfied if the user provided, 1, 2, or 3 values.",
                    type: 'number'
                },
                minValues: {
                    description: "specifies the minimum number of values for this argument.\nfor example, if you had a -f <file> argument where you wanted at least 2 'files' you would set `minValues: 2`, and this argument would be satisfied if the user provided, 2 or more values.",
                    type: 'number'
                },
                multiple: {
                    description: 'specifies that the argument may appear more than once.\nfor flags, this results in the number of occurrences of the flag being recorded. For example -ddd or -d -d -d would count as three occurrences.\nfor options there is a distinct difference in multiple occurrences vs multiple values. For example, --opt val1 val2 is one occurrence, but two values. Whereas --opt val1 --opt val2 is two occurrences.',
                    type: 'boolean'
                },
                multipleOccurrences: {
                    description: 'specifies that the argument may appear more than once.',
                    type: 'boolean'
                },
                name: {
                    description: 'the unique argument name',
                    type: 'string'
                },
                possibleValues: {
                    description: 'specifies a list of possible values for this argument. At runtime, the CLI verifies that only one of the specified values was used, or fails with an error message.',
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                requireEquals: {
                    description: 'requires that options use the --option=val syntax\ni.e. an equals between the option and associated value',
                    type: 'boolean'
                },
                required: {
                    description: 'sets whether or not the argument is required by default\nrequired by default means it is required, when no other conflicting rules have been evaluated\nconflicting rules take precedence over being required.',
                    type: 'boolean'
                },
                requiredIf: {
                    additionalItems: {
                        anyOf: [
                            {
                                type: 'string'
                            },
                            {
                                type: 'string'
                            }
                        ]
                    },
                    description: "allows specifying that an argument is required conditionally with the signature [arg: string, value: string]\nthe requirement will only become valid if the `arg`'s value equals `${value}`.",
                    items: [
                        {
                            type: 'string'
                        },
                        {
                            type: 'string'
                        }
                    ],
                    minItems: 2,
                    type: 'array'
                },
                requiredUnless: {
                    description: "sets an arg that override this arg's required setting\ni.e. this arg will be required unless this other argument is present",
                    type: 'string'
                },
                requiredUnlessAll: {
                    description: "sets args that override this arg's required setting\ni.e. this arg will be required unless all these other arguments are present",
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                requiredUnlessOne: {
                    description: "sets args that override this arg's required setting\ni.e. this arg will be required unless at least one of these other arguments are present",
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                requires: {
                    description: 'sets an argument by name that is required when this one is present\ni.e. when using this argument, the following argument must be present',
                    type: 'string'
                },
                requiresAll: {
                    description: 'sets multiple arguments by names that are required when this one is present\ni.e. when using this argument, the following arguments must be present',
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                requiresIf: {
                    additionalItems: {
                        anyOf: [
                            {
                                type: 'string'
                            },
                            {
                                type: 'string'
                            }
                        ]
                    },
                    description: "allows a conditional requirement with the signature [arg: string, value: string]\nthe requirement will only become valid if `arg`'s value equals `${value}`",
                    items: [
                        {
                            type: 'string'
                        },
                        {
                            type: 'string'
                        }
                    ],
                    minItems: 2,
                    type: 'array'
                },
                short: {
                    description: 'the short version of the argument, without the preceding -\nNOTE: Any leading - characters will be stripped, and only the first non - character will be used as the short version',
                    type: 'string'
                },
                takesValue: {
                    description: 'specifies that the argument takes a value at run time.\nNOTE: values for arguments may be specified in any of the following methods\n- Using a space such as -o value or --option value\n- Using an equals and no space such as -o=value or --option=value\n- Use a short and no space such as -ovalue',
                    type: 'boolean'
                }
            },
            required: ['name'],
            type: 'object'
        },
        CliConfig: {
            additionalProperties: false,
            defaultProperties: [],
            description: 'describes a CLI configuration',
            properties: {
                afterHelp: {
                    description: 'adds additional help information to be displayed in addition to auto-generated help\nthis information is displayed after the auto-generated help information\nthis is often used to describe how to use the arguments, or caveats to be noted.',
                    type: 'string'
                },
                args: {
                    description: 'list of args for the command',
                    items: {
                        $ref: '#/definitions/CliArg'
                    },
                    type: 'array'
                },
                beforeHelp: {
                    description: 'adds additional help information to be displayed in addition to auto-generated help\nthis information is displayed before the auto-generated help information.\nthis is often used for header information',
                    type: 'string'
                },
                description: {
                    description: 'command description which will be shown on the help information',
                    type: 'string'
                },
                longDescription: {
                    description: 'command long description which will be shown on the help information',
                    type: 'string'
                },
                subcommands: {
                    additionalProperties: {
                        $ref: '#/definitions/CliConfig'
                    },
                    defaultProperties: [],
                    description: 'list of subcommands of this command\n\nsubcommands are effectively sub-apps, because they can contain their own arguments, subcommands, usage, etc.\nthey also function just like the app command, in that they get their own auto generated help and usage',
                    type: 'object'
                }
            },
            type: 'object'
        },
        TauriBuildConfig: {
            additionalProperties: false,
            defaultProperties: [],
            properties: {
                beforeBuildCommand: {
                    description: 'a shell command to run before `tauri build` kicks in',
                    type: 'string'
                },
                beforeDevCommand: {
                    description: 'a shell command to run before `tauri dev` kicks in',
                    type: 'string'
                },
                devPath: {
                    description: "the app's dev server URL, or the path to the directory containing an index.html to open",
                    type: 'string'
                },
                distDir: {
                    description: "the path to the app's dist dir\nthis path must contain your index.html file",
                    type: 'string'
                },
                withGlobalTauri: {
                    type: 'boolean'
                }
            },
            required: ['devPath', 'distDir'],
            type: 'object'
        }
    },
    description: 'Tauri configuration',
    properties: {
        build: {
            $ref: '#/definitions/TauriBuildConfig',
            description: 'build/dev configuration'
        },
        ctx: {
            additionalProperties: false,
            defaultProperties: [],
            description: 'the context of the current `tauri dev` or `tauri build`',
            properties: {
                debug: {
                    description: 'whether the app should be built on debug mode or not',
                    type: 'boolean'
                },
                dev: {
                    description: "whether we're running on the dev environment or not",
                    type: 'boolean'
                },
                exitOnPanic: {
                    description: 'defines we should exit the `tauri dev` process if a Rust code error is found',
                    type: 'boolean'
                },
                prod: {
                    description: "whether we're building for production or not",
                    type: 'boolean'
                },
                target: {
                    description: 'the target of the compilation (see `rustup target list`)',
                    type: 'string'
                }
            },
            type: 'object'
        },
        plugins: {
            additionalProperties: {
                additionalProperties: {},
                defaultProperties: [],
                type: 'object'
            },
            defaultProperties: [],
            type: 'object'
        },
        tauri: {
            additionalProperties: false,
            defaultProperties: [],
            description: 'tauri root configuration object',
            properties: {
                allowlist: {
                    additionalProperties: {
                        type: 'boolean'
                    },
                    defaultProperties: [],
                    properties: {
                        all: {
                            type: 'boolean'
                        }
                    },
                    required: ['all'],
                    type: 'object'
                },
                bundle: {
                    additionalProperties: false,
                    defaultProperties: [],
                    description: 'tauri bundler configuration',
                    properties: {
                        active: {
                            description: 'whether we should build your app with tauri-bundler or plain `cargo build`',
                            type: 'boolean'
                        },
                        category: {
                            type: 'string'
                        },
                        copyright: {
                            type: 'string'
                        },
                        deb: {
                            additionalProperties: false,
                            defaultProperties: [],
                            properties: {
                                depends: {
                                    items: {
                                        type: 'string'
                                    },
                                    type: 'array'
                                },
                                useBootstrapper: {
                                    type: 'boolean'
                                }
                            },
                            type: 'object'
                        },
                        exceptionDomain: {
                            type: 'string'
                        },
                        externalBin: {
                            items: {
                                type: 'string'
                            },
                            type: 'array'
                        },
                        icon: {
                            description: "the app's icons",
                            items: {
                                type: 'string'
                            },
                            type: 'array'
                        },
                        identifier: {
                            description: "the app's identifier",
                            type: 'string'
                        },
                        longDescription: {
                            type: 'string'
                        },
                        osx: {
                            additionalProperties: false,
                            defaultProperties: [],
                            properties: {
                                frameworks: {
                                    items: {
                                        type: 'string'
                                    },
                                    type: 'array'
                                },
                                license: {
                                    type: 'string'
                                },
                                minimumSystemVersion: {
                                    type: 'string'
                                },
                                useBootstrapper: {
                                    type: 'boolean'
                                }
                            },
                            type: 'object'
                        },
                        resources: {
                            description: 'app resources to bundle\neach resource is a path to a file or directory\nglob patterns are supported',
                            items: {
                                type: 'string'
                            },
                            type: 'array'
                        },
                        shortDescription: {
                            type: 'string'
                        },
                        targets: {
                            anyOf: [
                                {
                                    items: {
                                        type: 'string'
                                    },
                                    type: 'array'
                                },
                                {
                                    type: 'string'
                                }
                            ],
                            description: 'the bundle targets, currently supports ["deb", "osx", "msi", "appimage", "dmg"] or "all"'
                        }
                    },
                    required: ['icon', 'identifier'],
                    type: 'object'
                },
                cli: {
                    $ref: '#/definitions/CliConfig',
                    description: "app's CLI definition"
                },
                embeddedServer: {
                    additionalProperties: false,
                    defaultProperties: [],
                    description: 'the embedded server configuration',
                    properties: {
                        active: {
                            description: 'whether we should use the embedded-server or the no-server mode',
                            type: 'boolean'
                        },
                        port: {
                            anyOf: [
                                {
                                    enum: ['random'],
                                    type: 'string'
                                },
                                {
                                    type: 'number'
                                }
                            ],
                            description: "the embedded server port number or the 'random' string to generate one at runtime"
                        }
                    },
                    type: 'object'
                },
                inliner: {
                    additionalProperties: false,
                    defaultProperties: [],
                    properties: {
                        active: {
                            type: 'boolean'
                        }
                    },
                    type: 'object'
                },
                security: {
                    additionalProperties: false,
                    defaultProperties: [],
                    properties: {
                        csp: {
                            type: 'string'
                        }
                    },
                    type: 'object'
                },
                window: {
                    additionalProperties: false,
                    defaultProperties: [],
                    properties: {
                        fullscreen: {
                            type: 'boolean'
                        },
                        height: {
                            type: 'number'
                        },
                        resizable: {
                            type: 'boolean'
                        },
                        title: {
                            type: 'string'
                        },
                        width: {
                            type: 'number'
                        }
                    },
                    required: ['title'],
                    type: 'object'
                }
            },
            required: [
                'allowlist',
                'bundle',
                'embeddedServer',
                'inliner',
                'security',
                'window'
            ],
            type: 'object'
        },
        verbose: {
            description: 'Whether or not to enable verbose logging',
            type: 'boolean'
        }
    },
    required: ['build', 'ctx', 'tauri'],
    type: 'object'
};
exports.isTauriConfig = exports.ajv.compile(exports.TauriConfigSchema);
function validate(value) {
    if (exports.isTauriConfig(value)) {
        return value;
    }
    else {
        throw new Error(exports.ajv.errorsText(exports.isTauriConfig.errors.filter(function (e) { return e.keyword !== 'if'; }), { dataVar: 'TauriConfig' }) +
            '\n\n' +
            util_1.inspect(value));
    }
}
exports.default = validate;


/***/ }),

/***/ "@tauri-apps/tauri-inliner":
/*!********************************************!*\
  !*** external "@tauri-apps/tauri-inliner" ***!
  \********************************************/
/***/ ((module) => {

module.exports = require("@tauri-apps/tauri-inliner");;

/***/ }),

/***/ "@tauri-apps/toml":
/*!***********************************!*\
  !*** external "@tauri-apps/toml" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("@tauri-apps/toml");;

/***/ }),

/***/ "ajv":
/*!**********************!*\
  !*** external "ajv" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("ajv");;

/***/ }),

/***/ "ajv/lib/refs/json-schema-draft-06.json":
/*!*********************************************************!*\
  !*** external "ajv/lib/refs/json-schema-draft-06.json" ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = require("ajv/lib/refs/json-schema-draft-06.json");;

/***/ }),

/***/ "chalk":
/*!************************!*\
  !*** external "chalk" ***!
  \************************/
/***/ ((module) => {

module.exports = require("chalk");;

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");;

/***/ }),

/***/ "chokidar":
/*!***************************!*\
  !*** external "chokidar" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("chokidar");;

/***/ }),

/***/ "cross-spawn":
/*!******************************!*\
  !*** external "cross-spawn" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("cross-spawn");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");;

/***/ }),

/***/ "fs-extra":
/*!***************************!*\
  !*** external "fs-extra" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("fs-extra");;

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");;

/***/ }),

/***/ "http-proxy":
/*!*****************************!*\
  !*** external "http-proxy" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("http-proxy");;

/***/ }),

/***/ "is-reachable":
/*!*******************************!*\
  !*** external "is-reachable" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("is-reachable");;

/***/ }),

/***/ "jsdom":
/*!************************!*\
  !*** external "jsdom" ***!
  \************************/
/***/ ((module) => {

module.exports = require("jsdom");;

/***/ }),

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("lodash");;

/***/ }),

/***/ "ms":
/*!*********************!*\
  !*** external "ms" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("ms");;

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");;

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");;

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");;

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");;

/***/ }),

/***/ "webpack-merge":
/*!********************************!*\
  !*** external "webpack-merge" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("webpack-merge");;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__("./src/api/dev.ts");
/******/ })()
;
});
//# sourceMappingURL=dev.js.map